<map id="llvm::Instruction" name="llvm::Instruction">
<area shape="rect" id="node1" title=" " alt="" coords="1953,639,2068,665"/>
<area shape="rect" id="node11" href="$classllvm_1_1AtomicCmpXchgInst.html" title="An instruction that atomically checks whether a specified value is in a memory location,..." alt="" coords="2117,5,2292,32"/>
<area shape="rect" id="node12" href="$classllvm_1_1AtomicRMWInst.html" title="an instruction that atomically reads a memory location, combines it with another value,..." alt="" coords="2129,56,2280,83"/>
<area shape="rect" id="node13" href="$classllvm_1_1BinaryOperator.html" title=" " alt="" coords="2133,107,2276,133"/>
<area shape="rect" id="node14" href="$classllvm_1_1BranchInst.html" title="Conditional or Unconditional Branch instruction." alt="" coords="2146,157,2263,184"/>
<area shape="rect" id="node15" href="$classllvm_1_1CallBase.html" title="Base class for all callable instructions (InvokeInst and CallInst) Holds everything related to callin..." alt="" coords="2151,208,2258,235"/>
<area shape="rect" id="node20" href="$classllvm_1_1CatchReturnInst.html" title=" " alt="" coords="2131,259,2279,285"/>
<area shape="rect" id="node21" href="$classllvm_1_1CatchSwitchInst.html" title=" " alt="" coords="2129,309,2280,336"/>
<area shape="rect" id="node22" href="$classllvm_1_1CleanupReturnInst.html" title=" " alt="" coords="2123,360,2286,387"/>
<area shape="rect" id="node23" href="$classllvm_1_1CmpInst.html" title="This class is the base class for the comparison instructions." alt="" coords="2153,411,2257,437"/>
<area shape="rect" id="node26" href="$classllvm_1_1ExtractElementInst.html" title="This instruction extracts a single (scalar) element from a VectorType value." alt="" coords="2121,461,2288,488"/>
<area shape="rect" id="node27" href="$classllvm_1_1FenceInst.html" title="An instruction for ordering other memory operations." alt="" coords="2149,512,2261,539"/>
<area shape="rect" id="node28" href="$classllvm_1_1FuncletPadInst.html" title=" " alt="" coords="2133,563,2276,589"/>
<area shape="rect" id="node31" href="$classllvm_1_1GetElementPtrInst.html" title="an instruction for type&#45;safe pointer arithmetic to access elements of arrays and structs" alt="" coords="2123,613,2286,640"/>
<area shape="rect" id="node32" href="$classllvm_1_1IndirectBrInst.html" title="Indirect Branch Instruction." alt="" coords="2139,664,2271,691"/>
<area shape="rect" id="node33" href="$classllvm_1_1InsertElementInst.html" title="This instruction inserts a single (scalar) element into a VectorType value." alt="" coords="2125,715,2284,741"/>
<area shape="rect" id="node34" href="$classllvm_1_1InsertValueInst.html" title="This instruction inserts a struct field of array element value into an aggregate value." alt="" coords="2133,765,2276,792"/>
<area shape="rect" id="node35" href="$classllvm_1_1LandingPadInst.html" title="The landingpad instruction holds all of the information necessary to generate correct exception handl..." alt="" coords="2133,816,2277,843"/>
<area shape="rect" id="node36" href="$classllvm_1_1PHINode.html" title=" " alt="" coords="2151,867,2258,893"/>
<area shape="rect" id="node37" href="$classllvm_1_1ResumeInst.html" title="Resume the propagation of an exception." alt="" coords="2143,917,2267,944"/>
<area shape="rect" id="node38" href="$classllvm_1_1ReturnInst.html" title="Return a value (possibly void), from a function." alt="" coords="2147,968,2262,995"/>
<area shape="rect" id="node39" href="$classllvm_1_1SelectInst.html" title="This class represents the LLVM &#39;select&#39; instruction." alt="" coords="2148,1019,2261,1045"/>
<area shape="rect" id="node40" href="$classllvm_1_1ShuffleVectorInst.html" title="This instruction constructs a fixed permutation of two input vectors." alt="" coords="2128,1069,2281,1096"/>
<area shape="rect" id="node41" href="$classllvm_1_1StoreInst.html" title="An instruction for storing to memory." alt="" coords="2151,1120,2258,1147"/>
<area shape="rect" id="node42" href="$classllvm_1_1SwitchInst.html" title="Multiway switch." alt="" coords="2147,1171,2263,1197"/>
<area shape="rect" id="node43" href="$classllvm_1_1UnaryInstruction.html" title=" " alt="" coords="2129,1221,2280,1248"/>
<area shape="rect" id="node49" href="$classllvm_1_1UnreachableInst.html" title="This function has undefined behavior." alt="" coords="2130,1272,2279,1299"/>
<area shape="rect" id="node2" href="$classllvm_1_1User.html" title=" " alt="" coords="1791,605,1874,632"/>
<area shape="rect" id="node3" href="$classllvm_1_1Value.html" title="LLVM Value Representation." alt="" coords="1414,605,1501,632"/>
<area shape="rect" id="node4" href="$classllvm_1_1ilist__node__with__parent.html" title=" " alt="" coords="1761,656,1904,712"/>
<area shape="rect" id="node5" href="$classllvm_1_1ilist__node.html" title=" " alt="" coords="829,658,961,699"/>
<area shape="rect" id="node10" href="$classllvm_1_1ilist__node.html" title=" " alt="" coords="1147,721,1316,762"/>
<area shape="rect" id="node6" href="$classllvm_1_1ilist__node__impl.html" title=" " alt="" coords="589,643,780,714"/>
<area shape="rect" id="node7" title=" " alt="" coords="5,665,183,692"/>
<area shape="rect" id="node8" href="$classllvm_1_1ilist__node__impl.html" title="Implementation for an ilist node." alt="" coords="232,690,372,731"/>
<area shape="rect" id="node9" href="$classllvm_1_1ilist__node__with__parent.html" title="An ilist node that can access its parent list." alt="" coords="1365,713,1549,769"/>
<area shape="rect" id="node16" href="$classllvm_1_1CallBrInst.html" title="CallBr instruction, tracking function calls that may not return control but instead transfer it to a ..." alt="" coords="2363,145,2474,172"/>
<area shape="rect" id="node17" href="$classllvm_1_1CallInst.html" title="This class represents a function call, abstracting a target machine&#39;s calling convention." alt="" coords="2369,196,2468,223"/>
<area shape="rect" id="node18" href="$classllvm_1_1GCStatepointInst.html" title="Represents a gc.statepoint intrinsic call." alt="" coords="2341,247,2496,273"/>
<area shape="rect" id="node19" href="$classllvm_1_1InvokeInst.html" title="Invoke instruction." alt="" coords="2362,297,2475,324"/>
<area shape="rect" id="node24" href="$classllvm_1_1FCmpInst.html" title="This instruction compares its operands according to the predicate given to the constructor." alt="" coords="2363,373,2475,400"/>
<area shape="rect" id="node25" href="$classllvm_1_1ICmpInst.html" title="This instruction compares its operands according to the predicate given to the constructor." alt="" coords="2365,424,2473,451"/>
<area shape="rect" id="node29" href="$classllvm_1_1CatchPadInst.html" title=" " alt="" coords="2352,537,2485,564"/>
<area shape="rect" id="node30" href="$classllvm_1_1CleanupPadInst.html" title=" " alt="" coords="2345,588,2492,615"/>
<area shape="rect" id="node44" href="$classllvm_1_1AllocaInst.html" title="an instruction to allocate memory on the stack" alt="" coords="2363,1120,2475,1147"/>
<area shape="rect" id="node45" href="$classllvm_1_1CastInst.html" title="This is the base class for all instructions that perform data casts." alt="" coords="2367,1171,2470,1197"/>
<area shape="rect" id="node46" href="$classllvm_1_1ExtractValueInst.html" title="This instruction extracts a struct member or array element value from an aggregate value." alt="" coords="2343,1221,2494,1248"/>
<area shape="rect" id="node47" href="$classllvm_1_1FreezeInst.html" title="This class represents a freeze function that returns random concrete value if an operand is either a ..." alt="" coords="2361,1272,2476,1299"/>
<area shape="rect" id="node48" href="$classllvm_1_1LoadInst.html" title="An instruction for reading from memory." alt="" coords="2367,1323,2471,1349"/>
</map>
