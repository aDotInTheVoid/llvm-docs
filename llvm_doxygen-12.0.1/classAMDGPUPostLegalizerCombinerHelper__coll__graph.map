<map id="AMDGPUPostLegalizerCombinerHelper" name="AMDGPUPostLegalizerCombinerHelper">
<area shape="rect" id="node1" title=" " alt="" coords="2745,419,2960,461"/>
<area shape="rect" id="node2" href="$classllvm_1_1MachineFunction.html" title=" " alt="" coords="2501,176,2655,203"/>
<area shape="rect" id="node3" title=" " alt="" coords="2088,201,2287,242"/>
<area shape="rect" id="node4" href="$classunsigned.html" title=" " alt="" coords="2150,84,2225,111"/>
<area shape="rect" id="node5" href="$classllvm_1_1SmallVector.html" title=" " alt="" coords="2114,135,2261,177"/>
<area shape="rect" id="node6" href="$classllvm_1_1SmallVectorImpl.html" title="This class consists of common code factored out of the SmallVector class to reduce code duplication b..." alt="" coords="1470,80,1651,107"/>
<area shape="rect" id="node16" href="$classllvm_1_1SmallVector.html" title="This is a &#39;vector&#39; (really, a variable&#45;sized array), optimized for the case when the array is small." alt="" coords="1744,135,1876,177"/>
<area shape="rect" id="node7" href="$classllvm_1_1SmallVectorTemplateBase.html" title="SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; &#45; This is where we put method implementations that..." alt="" coords="1072,73,1249,114"/>
<area shape="rect" id="node8" href="$classllvm_1_1SmallVectorTemplateCommon.html" title="This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD." alt="" coords="721,31,899,73"/>
<area shape="rect" id="node9" href="$classllvm_1_1SmallVectorBase.html" title=" " alt="" coords="515,24,672,80"/>
<area shape="rect" id="node10" href="$classllvm_1_1SmallVectorBase.html" title="This is all the stuff common to all SmallVectors." alt="" coords="172,31,327,73"/>
<area shape="rect" id="node11" title=" " alt="" coords="5,13,68,40"/>
<area shape="rect" id="node12" title=" " alt="" coords="9,64,64,91"/>
<area shape="rect" id="node13" href="$classbool.html" title=" " alt="" coords="787,97,833,124"/>
<area shape="rect" id="node14" href="$structllvm_1_1SmallVectorStorage.html" title="Storage for the SmallVector elements." alt="" coords="1076,195,1245,237"/>
<area shape="rect" id="node17" href="$structllvm_1_1SmallVectorStorage.html" title=" " alt="" coords="1453,131,1668,187"/>
<area shape="rect" id="node15" title=" " alt="" coords="787,285,833,312"/>
<area shape="rect" id="node20" href="$classllvm_1_1MachineDominatorTree.html" title="DominatorTree Class &#45; Concrete subclass of DominatorTreeBase that is used to compute a normal dominat..." alt="" coords="2093,267,2281,293"/>
<area shape="rect" id="node18" href="$classllvm_1_1CombinerHelper.html" title=" " alt="" coords="2504,399,2652,425"/>
<area shape="rect" id="node19" href="$classllvm_1_1GISelChangeObserver.html" title="Abstract class that contains various methods for clients to notify about changes." alt="" coords="1717,468,1903,495"/>
<area shape="rect" id="node27" href="$classllvm_1_1GISelKnownBits.html" title=" " alt="" coords="2112,383,2263,409"/>
<area shape="rect" id="node21" href="$classllvm_1_1MachineFunctionPass.html" title="MachineFunctionPass &#45; This class adapts the FunctionPass interface to allow convenient creation of pa..." alt="" coords="1719,261,1901,288"/>
<area shape="rect" id="node22" href="$classllvm_1_1FunctionPass.html" title="FunctionPass class &#45; This class is used to implement most global optimizations." alt="" coords="1493,261,1628,288"/>
<area shape="rect" id="node23" href="$classllvm_1_1Pass.html" title="Pass interface &#45; Implemented by all &#39;passes&#39;." alt="" coords="1119,261,1203,288"/>
<area shape="rect" id="node24" href="$classllvm_1_1LegalizerInfo.html" title=" " alt="" coords="2124,317,2251,344"/>
<area shape="rect" id="node25" href="$classllvm_1_1MachineRegisterInfo.html" title="MachineRegisterInfo &#45; Keep track of information for virtual and physical registers,..." alt="" coords="2101,443,2274,469"/>
<area shape="rect" id="node26" href="$classllvm_1_1MachineIRBuilder.html" title="Helper class to build MachineInstr." alt="" coords="2109,497,2266,524"/>
</map>
