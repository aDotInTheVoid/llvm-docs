<map id="llvm::ilist_node_with_parent&lt; NodeTy, ParentTy, Options &gt;" name="llvm::ilist_node_with_parent&lt; NodeTy, ParentTy, Options &gt;">
<area shape="rect" id="node1" title="An ilist node that can access its parent list." alt="" coords="1365,1033,1549,1089"/>
<area shape="rect" id="node7" href="$classllvm_1_1ilist__node__with__parent.html" title=" " alt="" coords="1805,409,2001,465"/>
<area shape="rect" id="node9" href="$classllvm_1_1ilist__node__with__parent.html" title=" " alt="" coords="1819,709,1987,765"/>
<area shape="rect" id="node26" href="$classllvm_1_1ilist__node__with__parent.html" title=" " alt="" coords="1811,971,1996,1042"/>
<area shape="rect" id="node28" href="$classllvm_1_1ilist__node__with__parent.html" title=" " alt="" coords="1832,1067,1975,1123"/>
<area shape="rect" id="node46" href="$classllvm_1_1ilist__node__with__parent.html" title=" " alt="" coords="1825,1147,1981,1203"/>
<area shape="rect" id="node48" href="$classllvm_1_1ilist__node__with__parent.html" title=" " alt="" coords="1830,1227,1977,1283"/>
<area shape="rect" id="node2" href="$classllvm_1_1ilist__node.html" title=" " alt="" coords="1147,1041,1316,1082"/>
<area shape="rect" id="node3" href="$classllvm_1_1ilist__node__impl.html" title="Implementation for an ilist node." alt="" coords="232,1065,372,1106"/>
<area shape="rect" id="node6" href="$classllvm_1_1ilist__node__impl.html" title=" " alt="" coords="589,1074,780,1145"/>
<area shape="rect" id="node4" title=" " alt="" coords="5,1115,183,1141"/>
<area shape="rect" id="node5" href="$classllvm_1_1ilist__node.html" title=" " alt="" coords="829,1078,961,1119"/>
<area shape="rect" id="node8" href="$classllvm_1_1MachineBasicBlock.html" title=" " alt="" coords="2051,360,2220,387"/>
<area shape="rect" id="node10" href="$classllvm_1_1VPRecipeBase.html" title="VPRecipeBase is a base class modeling a sequence of one or more output IR instructions." alt="" coords="2065,411,2206,437"/>
<area shape="rect" id="node11" href="$classllvm_1_1VPBlendRecipe.html" title="A recipe for vectorizing a phi&#45;node as a sequence of mask&#45;based select instructions." alt="" coords="2306,5,2451,32"/>
<area shape="rect" id="node12" href="$classllvm_1_1VPBranchOnMaskRecipe.html" title="A recipe for generating conditional branches on the bits of a mask." alt="" coords="2277,56,2480,83"/>
<area shape="rect" id="node13" href="$classllvm_1_1VPInstruction.html" title="This is a concrete Recipe that models a single VPlan&#45;level instruction." alt="" coords="2313,107,2445,133"/>
<area shape="rect" id="node14" href="$classllvm_1_1VPInterleaveRecipe.html" title="VPInterleaveRecipe is a recipe for transforming an interleave group of load or stores into one wide l..." alt="" coords="2295,157,2462,184"/>
<area shape="rect" id="node15" href="$classllvm_1_1VPPredInstPHIRecipe.html" title="VPPredInstPHIRecipe is a recipe for generating the phi nodes needed when control converges back from ..." alt="" coords="2288,208,2469,235"/>
<area shape="rect" id="node16" href="$classllvm_1_1VPReductionRecipe.html" title="A recipe to represent inloop reduction operations, performing a reduction on a vector operand into a ..." alt="" coords="2294,259,2463,285"/>
<area shape="rect" id="node17" href="$classllvm_1_1VPReplicateRecipe.html" title="VPReplicateRecipe replicates a given instruction producing multiple scalar copies of the original sca..." alt="" coords="2296,309,2461,336"/>
<area shape="rect" id="node18" href="$classllvm_1_1VPWidenCallRecipe.html" title="A recipe for widening Call instructions." alt="" coords="2293,360,2464,387"/>
<area shape="rect" id="node19" href="$classllvm_1_1VPWidenCanonicalIVRecipe.html" title="A Recipe for widening the canonical induction variable of the vector loop." alt="" coords="2269,411,2488,437"/>
<area shape="rect" id="node20" href="$classllvm_1_1VPWidenGEPRecipe.html" title="A recipe for handling GEP instructions." alt="" coords="2291,461,2467,488"/>
<area shape="rect" id="node21" href="$classllvm_1_1VPWidenIntOrFpInductionRecipe.html" title="A recipe for handling phi nodes of integer and floating&#45;point inductions, producing their vector and ..." alt="" coords="2275,513,2482,554"/>
<area shape="rect" id="node22" href="$classllvm_1_1VPWidenMemoryInstructionRecipe.html" title="A Recipe for widening load/store operations." alt="" coords="2269,578,2488,619"/>
<area shape="rect" id="node23" href="$classllvm_1_1VPWidenPHIRecipe.html" title="A recipe for handling all phi nodes except for integer and FP inductions." alt="" coords="2293,644,2464,671"/>
<area shape="rect" id="node24" href="$classllvm_1_1VPWidenRecipe.html" title="VPWidenRecipe is a recipe for producing a copy of vector type its ingredient." alt="" coords="2304,695,2453,721"/>
<area shape="rect" id="node25" href="$classllvm_1_1VPWidenSelectRecipe.html" title="A recipe for widening select instructions." alt="" coords="2285,745,2472,772"/>
<area shape="rect" id="node27" href="$classllvm_1_1MachineInstr.html" title="Representation of each machine instruction." alt="" coords="2071,993,2200,1020"/>
<area shape="rect" id="node29" href="$classllvm_1_1Instruction.html" title=" " alt="" coords="2078,1125,2193,1152"/>
<area shape="rect" id="node30" href="$classllvm_1_1AtomicCmpXchgInst.html" title="An instruction that atomically checks whether a specified value is in a memory location,..." alt="" coords="2291,796,2466,823"/>
<area shape="rect" id="node31" href="$classllvm_1_1AtomicRMWInst.html" title="an instruction that atomically reads a memory location, combines it with another value,..." alt="" coords="2303,847,2454,873"/>
<area shape="rect" id="node32" href="$classllvm_1_1BinaryOperator.html" title=" " alt="" coords="2307,897,2450,924"/>
<area shape="rect" id="node33" href="$classllvm_1_1BranchInst.html" title="Conditional or Unconditional Branch instruction." alt="" coords="2320,948,2437,975"/>
<area shape="rect" id="node34" href="$classllvm_1_1CallBase.html" title="Base class for all callable instructions (InvokeInst and CallInst) Holds everything related to callin..." alt="" coords="2325,999,2432,1025"/>
<area shape="rect" id="node35" href="$classllvm_1_1CatchReturnInst.html" title=" " alt="" coords="2305,1049,2453,1076"/>
<area shape="rect" id="node36" href="$classllvm_1_1CatchSwitchInst.html" title=" " alt="" coords="2303,1100,2454,1127"/>
<area shape="rect" id="node37" href="$classllvm_1_1CleanupReturnInst.html" title=" " alt="" coords="2297,1151,2460,1177"/>
<area shape="rect" id="node38" href="$classllvm_1_1CmpInst.html" title="This class is the base class for the comparison instructions." alt="" coords="2327,1201,2431,1228"/>
<area shape="rect" id="node39" href="$classllvm_1_1ExtractElementInst.html" title="This instruction extracts a single (scalar) element from a VectorType value." alt="" coords="2295,1252,2462,1279"/>
<area shape="rect" id="node40" href="$classllvm_1_1FenceInst.html" title="An instruction for ordering other memory operations." alt="" coords="2323,1303,2435,1329"/>
<area shape="rect" id="node41" href="$classllvm_1_1FuncletPadInst.html" title=" " alt="" coords="2307,1353,2450,1380"/>
<area shape="rect" id="node42" href="$classllvm_1_1GetElementPtrInst.html" title="an instruction for type&#45;safe pointer arithmetic to access elements of arrays and structs" alt="" coords="2297,1404,2460,1431"/>
<area shape="rect" id="node43" href="$classllvm_1_1IndirectBrInst.html" title="Indirect Branch Instruction." alt="" coords="2313,1455,2445,1481"/>
<area shape="rect" id="node44" href="$classllvm_1_1InsertElementInst.html" title="This instruction inserts a single (scalar) element into a VectorType value." alt="" coords="2299,1505,2458,1532"/>
<area shape="rect" id="node45" href="$classllvm_1_1InsertValueInst.html" title="This instruction inserts a struct field of array element value into an aggregate value." alt="" coords="2307,1556,2450,1583"/>
<area shape="rect" id="node47" href="$classllvm_1_1MCFragment.html" title=" " alt="" coords="2070,1176,2201,1203"/>
<area shape="rect" id="node49" href="$classllvm_1_1BasicBlock.html" title="LLVM Basic Block Representation." alt="" coords="2075,1241,2195,1268"/>
</map>
