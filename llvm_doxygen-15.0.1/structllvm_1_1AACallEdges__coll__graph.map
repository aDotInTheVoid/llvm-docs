<map id="llvm::AACallEdges" name="llvm::AACallEdges">
<area shape="rect" id="node1" title="An abstract state for querying live call edges." alt="" coords="2604,167,2745,193"/>
<area shape="rect" id="node2" href="$structllvm_1_1StateWrapper.html" title=" " alt="" coords="2296,159,2555,201"/>
<area shape="rect" id="node3" href="$structllvm_1_1AbstractAttribute.html" title="Base struct for all &quot;concrete attribute&quot; deductions." alt="" coords="1898,108,2069,135"/>
<area shape="rect" id="node4" href="$structllvm_1_1IRPosition.html" title="Helper to describe and deal with positions in the LLVM&#45;IR." alt="" coords="1603,57,1727,84"/>
<area shape="rect" id="node5" title=" " alt="" coords="1235,23,1293,49"/>
<area shape="rect" id="node6" href="$structllvm_1_1AADepGraphNode.html" title="}" alt="" coords="1577,108,1753,135"/>
<area shape="rect" id="node7" href="$classllvm_1_1TinyPtrVector.html" title=" " alt="" coords="1176,90,1352,131"/>
<area shape="rect" id="node8" href="$classllvm_1_1TinyPtrVector.html" title="TinyPtrVector &#45; This class is specialized for cases where there are normally 0 or 1 element in a vect..." alt="" coords="779,90,925,131"/>
<area shape="rect" id="node9" href="$structllvm_1_1BooleanState.html" title="Simple wrapper for a single bit (boolean) state." alt="" coords="1910,167,2057,193"/>
<area shape="rect" id="node10" href="$structllvm_1_1IntegerStateBase.html" title=" " alt="" coords="1579,159,1750,201"/>
<area shape="rect" id="node11" href="$structllvm_1_1AbstractState.html" title="An interface to query the internal state of an abstract attribute." alt="" coords="779,172,925,199"/>
<area shape="rect" id="node13" href="$structllvm_1_1IntegerStateBase.html" title="Simple state with integers encoding." alt="" coords="1179,207,1349,263"/>
<area shape="rect" id="node12" title=" " alt="" coords="1239,287,1289,313"/>
<area shape="rect" id="node14" title=" " alt="" coords="815,239,889,265"/>
<area shape="rect" id="node15" href="$structllvm_1_1StateWrapper.html" title="Helper to tie a abstract state implementation to an abstract attribute." alt="" coords="1888,218,2079,259"/>
<area shape="rect" id="node16" href="$classBaseType.html" title=" " alt="" coords="1623,225,1707,252"/>
<area shape="rect" id="node17" href="$classStateTy.html" title=" " alt="" coords="1629,276,1700,303"/>
<area shape="rect" id="node18" href="$structllvm_1_1AACallGraphNode.html" title=" " alt="" coords="2338,243,2513,269"/>
<area shape="rect" id="node19" href="$structllvm_1_1Attributor.html" title="The fixpoint analysis framework that orchestrates the attribute deduction." alt="" coords="1923,297,2044,324"/>
<area shape="rect" id="node20" href="$classllvm_1_1BumpPtrAllocatorImpl.html" title="Allocate memory in an ever growing pool, as if by bump&#45;pointer." alt="" coords="1552,327,1777,383"/>
<area shape="rect" id="node21" href="$classllvm_1_1AllocatorBase.html" title=" " alt="" coords="543,317,725,387"/>
<area shape="rect" id="node22" href="$classllvm_1_1AllocatorBase.html" title="CRTP base class providing obvious overloads for the core Allocate() methods of LLVM&#45;style allocators." alt="" coords="5,361,155,402"/>
<area shape="rect" id="node25" href="$classllvm_1_1AllocatorBase.html" title=" " alt="" coords="365,390,519,431"/>
<area shape="rect" id="node23" href="$classllvm_1_1detail_1_1AllocatorHolder.html" title=" " alt="" coords="1161,390,1367,431"/>
<area shape="rect" id="node24" href="$classllvm_1_1MallocAllocator.html" title=" " alt="" coords="772,397,932,424"/>
<area shape="rect" id="node26" href="$classllvm_1_1detail_1_1AllocatorHolder.html" title=" " alt="" coords="749,449,955,490"/>
<area shape="rect" id="node27" title=" " alt="" coords="415,456,469,483"/>
</map>
