<map id="llvm::BumpPtrAllocatorImpl&lt; AllocatorT, SlabSize, SizeThreshold, GrowthDelay &gt;" name="llvm::BumpPtrAllocatorImpl&lt; AllocatorT, SlabSize, SizeThreshold, GrowthDelay &gt;">
<area shape="rect" id="node1" title="Allocate memory in an ever growing pool, as if by bump&#45;pointer." alt="" coords="1393,141,1619,197"/>
<area shape="rect" id="node9" href="$classllvm_1_1detail_1_1AllocatorHolder.html" title=" " alt="" coords="1805,32,2011,73"/>
<area shape="rect" id="node11" href="$classllvm_1_1detail_1_1AllocatorHolder.html" title=" " alt="" coords="1792,148,2024,189"/>
<area shape="rect" id="node15" href="$classllvm_1_1BumpPtrAllocatorImpl.html" title=" " alt="" coords="1807,213,2009,255"/>
<area shape="rect" id="node2" href="$classllvm_1_1AllocatorBase.html" title=" " alt="" coords="543,104,725,175"/>
<area shape="rect" id="node3" href="$classllvm_1_1AllocatorBase.html" title="CRTP base class providing obvious overloads for the core Allocate() methods of LLVM&#45;style allocators." alt="" coords="5,148,155,189"/>
<area shape="rect" id="node6" href="$classllvm_1_1AllocatorBase.html" title=" " alt="" coords="365,177,519,219"/>
<area shape="rect" id="node4" href="$classllvm_1_1detail_1_1AllocatorHolder.html" title=" " alt="" coords="1139,177,1344,219"/>
<area shape="rect" id="node5" href="$classllvm_1_1MallocAllocator.html" title=" " alt="" coords="772,185,932,211"/>
<area shape="rect" id="node7" href="$classllvm_1_1detail_1_1AllocatorHolder.html" title=" " alt="" coords="749,236,955,277"/>
<area shape="rect" id="node8" title=" " alt="" coords="415,243,469,270"/>
<area shape="rect" id="node10" href="$classllvm_1_1StringMap.html" title=" " alt="" coords="2090,5,2311,47"/>
<area shape="rect" id="node12" href="$classllvm_1_1StringMap.html" title=" " alt="" coords="2073,71,2328,141"/>
<area shape="rect" id="node13" href="$classllvm_1_1StringMap.html" title=" " alt="" coords="2076,166,2325,222"/>
<area shape="rect" id="node14" href="$classllvm_1_1StringMap.html" title=" " alt="" coords="2090,247,2311,288"/>
</map>
