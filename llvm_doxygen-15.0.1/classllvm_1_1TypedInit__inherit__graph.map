<map id="llvm::TypedInit" name="llvm::TypedInit">
<area shape="rect" id="node1" title="This is the common superclass of types that have a specific, explicit type, stored in ValueTy." alt="" coords="133,436,252,463"/>
<area shape="rect" id="node3" href="$classllvm_1_1AnonymousNameInit.html" title="&quot;anonymous_n&quot; &#45; Represent an anonymous record name" alt="" coords="300,5,496,32"/>
<area shape="rect" id="node4" href="$classllvm_1_1BitInit.html" title="&#39;true&#39;/&#39;false&#39; &#45; Represent a concrete initializer for a bit." alt="" coords="349,56,447,83"/>
<area shape="rect" id="node5" href="$classllvm_1_1BitsInit.html" title="&#39;{ a, b, c }&#39; &#45; Represents an initializer for a BitsRecTy value." alt="" coords="345,107,451,133"/>
<area shape="rect" id="node6" href="$classllvm_1_1CondOpInit.html" title="!cond(condition_1: value1, ..." alt="" coords="333,157,463,184"/>
<area shape="rect" id="node7" href="$classllvm_1_1DagInit.html" title="(v a, b) &#45; Represent a DAG tree value." alt="" coords="345,208,451,235"/>
<area shape="rect" id="node8" href="$classllvm_1_1DefInit.html" title="AL &#45; Represent a reference to a &#39;def&#39; in the description." alt="" coords="347,259,449,285"/>
<area shape="rect" id="node9" href="$classllvm_1_1ExistsOpInit.html" title="!exists&lt;type&gt;(expr) &#45; Dynamically determine if a record of type named expr exists." alt="" coords="329,309,467,336"/>
<area shape="rect" id="node10" href="$classllvm_1_1FieldInit.html" title="X.Y &#45; Represent a reference to a subfield of a variable." alt="" coords="343,360,453,387"/>
<area shape="rect" id="node11" href="$classllvm_1_1FoldOpInit.html" title="!foldl (a, b, expr, start, lst) &#45; Fold over a list." alt="" coords="335,411,461,437"/>
<area shape="rect" id="node12" href="$classllvm_1_1IntInit.html" title="&#39;7&#39; &#45; Represent an initialization by a literal integer value." alt="" coords="349,461,447,488"/>
<area shape="rect" id="node13" href="$classllvm_1_1IsAOpInit.html" title="!isa&lt;type&gt;(expr) &#45; Dynamically determine the type of an expression." alt="" coords="339,512,457,539"/>
<area shape="rect" id="node14" href="$classllvm_1_1ListInit.html" title="[AL, AH, CL] &#45; Represent a list of defs" alt="" coords="347,563,449,589"/>
<area shape="rect" id="node15" href="$classllvm_1_1OpInit.html" title="Base class for operators." alt="" coords="349,613,447,640"/>
<area shape="rect" id="node19" href="$classllvm_1_1StringInit.html" title="&quot;foo&quot; &#45; Represent an initialization by a string value." alt="" coords="339,664,457,691"/>
<area shape="rect" id="node20" href="$classllvm_1_1VarBitInit.html" title="Opcode{0} &#45; Represent access to one bit of a variable or field." alt="" coords="339,715,457,741"/>
<area shape="rect" id="node21" href="$classllvm_1_1VarDefInit.html" title="classname&lt;targs...&gt; &#45; Represent an uninstantiated anonymous class instantiation." alt="" coords="336,765,460,792"/>
<area shape="rect" id="node22" href="$classllvm_1_1VarInit.html" title="&#39;Opcode&#39; &#45; Represent a reference to an entire variable object." alt="" coords="347,816,449,843"/>
<area shape="rect" id="node23" href="$classllvm_1_1VarListElementInit.html" title="List[4] &#45; Represent access to one element of a var or field." alt="" coords="309,867,487,893"/>
<area shape="rect" id="node2" href="$classllvm_1_1Init.html" title=" " alt="" coords="5,436,85,463"/>
<area shape="rect" id="node16" href="$classllvm_1_1BinOpInit.html" title="!op (X, Y) &#45; Combine two inits." alt="" coords="547,563,666,589"/>
<area shape="rect" id="node17" href="$classllvm_1_1TernOpInit.html" title="!op (X, Y, Z) &#45; Combine two inits." alt="" coords="544,613,669,640"/>
<area shape="rect" id="node18" href="$classllvm_1_1UnOpInit.html" title="!op (X) &#45; Transform an init." alt="" coords="549,664,665,691"/>
</map>
