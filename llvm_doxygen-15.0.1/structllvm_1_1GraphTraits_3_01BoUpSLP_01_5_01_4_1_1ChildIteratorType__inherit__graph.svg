<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: llvm::GraphTraits&lt; BoUpSLP * &gt;::ChildIteratorType Pages: 1 -->
<svg width="2447pt" height="612pt"
 viewBox="0.00 0.00 2447.00 611.50" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 607.5)">
<title>llvm::GraphTraits&lt; BoUpSLP * &gt;::ChildIteratorType</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Add the VectorizableTree to the index iterator to be able to return TreeEntry pointers.">
<polygon fill="#bfbfbf" stroke="black" points="2267,-199.5 2267,-229.5 2439,-229.5 2439,-199.5 2267,-199.5"/>
<text text-anchor="start" x="2275" y="-217.5" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::GraphTraits&lt;</text>
<text text-anchor="middle" x="2353" y="-206.5" font-family="Helvetica,sans-Serif" font-size="10.00"> BoUpSLP * &gt;::ChildIteratorType</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="classllvm_1_1iterator__adaptor__base.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="2045,-188.5 2045,-240.5 2230,-240.5 2230,-188.5 2045,-188.5"/>
<text text-anchor="start" x="2053" y="-228.5" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::iterator_adaptor</text>
<text text-anchor="start" x="2053" y="-217.5" font-family="Helvetica,sans-Serif" font-size="10.00">_base&lt; ChildIteratorType,</text>
<text text-anchor="start" x="2053" y="-206.5" font-family="Helvetica,sans-Serif" font-size="10.00"> SmallVector&lt; BoUpSLP::EdgeInfo,</text>
<text text-anchor="middle" x="2137.5" y="-195.5" font-family="Helvetica,sans-Serif" font-size="10.00"> 1 &gt;::iterator &gt;</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M2240.53,-214.5C2249.29,-214.5 2258.1,-214.5 2266.71,-214.5"/>
<polygon fill="midnightblue" stroke="midnightblue" points="2240.28,-211 2230.28,-214.5 2240.28,-218 2240.28,-211"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="classllvm_1_1iterator__facade__base.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="1156,-145.5 1156,-417.5 1659,-417.5 1659,-145.5 1156,-145.5"/>
<text text-anchor="start" x="1164" y="-405.5" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::iterator_facade</text>
<text text-anchor="start" x="1164" y="-394.5" font-family="Helvetica,sans-Serif" font-size="10.00">_base&lt; ChildIteratorType,</text>
<text text-anchor="start" x="1164" y="-383.5" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator</text>
<text text-anchor="start" x="1164" y="-372.5" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; SmallVector&lt; BoUpSLP</text>
<text text-anchor="start" x="1164" y="-361.5" font-family="Helvetica,sans-Serif" font-size="10.00">::EdgeInfo, 1 &gt;::iterator &gt;</text>
<text text-anchor="start" x="1164" y="-350.5" font-family="Helvetica,sans-Serif" font-size="10.00">::iterator_category, typename</text>
<text text-anchor="start" x="1164" y="-339.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; SmallVector</text>
<text text-anchor="start" x="1164" y="-328.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; BoUpSLP::EdgeInfo, 1 &gt;::iterator</text>
<text text-anchor="start" x="1164" y="-317.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::value_type, typename std::iterator</text>
<text text-anchor="start" x="1164" y="-306.5" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; SmallVector&lt; BoUpSLP::EdgeInfo,</text>
<text text-anchor="start" x="1164" y="-295.5" font-family="Helvetica,sans-Serif" font-size="10.00"> 1 &gt;::iterator &gt;::difference_type, std::</text>
<text text-anchor="start" x="1164" y="-284.5" font-family="Helvetica,sans-Serif" font-size="10.00">conditional_t&lt; std::is_same&lt; typename std</text>
<text text-anchor="start" x="1164" y="-273.5" font-family="Helvetica,sans-Serif" font-size="10.00">::iterator_traits&lt; SmallVector&lt; BoUpSLP::EdgeInfo,</text>
<text text-anchor="start" x="1164" y="-262.5" font-family="Helvetica,sans-Serif" font-size="10.00"> 1 &gt;::iterator &gt;::value_type, typename std::iterator</text>
<text text-anchor="start" x="1164" y="-251.5" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; SmallVector&lt; BoUpSLP::EdgeInfo, 1 &gt;::iterator</text>
<text text-anchor="start" x="1164" y="-240.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::value_type &gt;::value, typename std::iterator_traits</text>
<text text-anchor="start" x="1164" y="-229.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; SmallVector&lt; BoUpSLP::EdgeInfo, 1 &gt;::iterator &gt;::pointer,</text>
<text text-anchor="start" x="1164" y="-218.5" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; SmallVector&lt; BoUpSLP::EdgeInfo,</text>
<text text-anchor="start" x="1164" y="-207.5" font-family="Helvetica,sans-Serif" font-size="10.00"> 1 &gt;::iterator &gt;::value_type * &gt;, std::conditional_t&lt; std::is</text>
<text text-anchor="start" x="1164" y="-196.5" font-family="Helvetica,sans-Serif" font-size="10.00">_same&lt; typename std::iterator_traits&lt; SmallVector&lt; BoUpSLP::EdgeInfo,</text>
<text text-anchor="start" x="1164" y="-185.5" font-family="Helvetica,sans-Serif" font-size="10.00"> 1 &gt;::iterator &gt;::value_type, typename std::iterator_traits&lt; SmallVector</text>
<text text-anchor="start" x="1164" y="-174.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; BoUpSLP::EdgeInfo, 1 &gt;::iterator &gt;::value_type &gt;::value, typename std</text>
<text text-anchor="start" x="1164" y="-163.5" font-family="Helvetica,sans-Serif" font-size="10.00">::iterator_traits&lt; SmallVector&lt; BoUpSLP::EdgeInfo, 1 &gt;::iterator &gt;::reference,</text>
<text text-anchor="middle" x="1407.5" y="-152.5" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; SmallVector&lt; BoUpSLP::EdgeInfo, 1 &gt;::iterator &gt;::value_type &amp; &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M1669.56,-267.75C1780.09,-260.35 1910.1,-249.58 2027,-234.5 2032.85,-233.75 2038.85,-232.89 2044.9,-231.96"/>
<polygon fill="midnightblue" stroke="midnightblue" points="1669.01,-264.28 1659.26,-268.43 1669.47,-271.26 1669.01,-264.28"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="classllvm_1_1iterator__facade__base.html" target="_top" xlink:title="CRTP base class which implements the entire standard iterator facade in terms of a minimal subset of ...">
<polygon fill="none" stroke="black" points="0,-153.5 0,-205.5 187,-205.5 187,-153.5 0,-153.5"/>
<text text-anchor="start" x="8" y="-193.5" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::iterator_facade</text>
<text text-anchor="start" x="8" y="-182.5" font-family="Helvetica,sans-Serif" font-size="10.00">_base&lt; DerivedT, IteratorCategory</text>
<text text-anchor="start" x="8" y="-171.5" font-family="Helvetica,sans-Serif" font-size="10.00">T, T, DifferenceTypeT, PointerT,</text>
<text text-anchor="middle" x="93.5" y="-160.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ReferenceT &gt;</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="orange" stroke-dasharray="5,2" d="M124.48,-213.06C144.9,-233.32 173.82,-257.31 205,-268.5 517.94,-380.76 906.91,-358.28 1155.95,-325.32"/>
<polygon fill="orange" stroke="orange" points="126.85,-210.48 117.35,-205.8 121.86,-215.39 126.85,-210.48"/>
<text text-anchor="start" x="205" y="-595.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; ChildIteratorType,</text>
<text text-anchor="start" x="205" y="-584.5" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator</text>
<text text-anchor="start" x="205" y="-573.5" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; SmallVector&lt; BoUpSLP</text>
<text text-anchor="start" x="205" y="-562.5" font-family="Helvetica,sans-Serif" font-size="10.00">::EdgeInfo, 1 &gt;::iterator &gt;</text>
<text text-anchor="start" x="205" y="-551.5" font-family="Helvetica,sans-Serif" font-size="10.00">::iterator_category, typename</text>
<text text-anchor="start" x="205" y="-540.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; SmallVector</text>
<text text-anchor="start" x="205" y="-529.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; BoUpSLP::EdgeInfo, 1 &gt;::iterator</text>
<text text-anchor="start" x="205" y="-518.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::value_type, typename std::iterator</text>
<text text-anchor="start" x="205" y="-507.5" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; SmallVector&lt; BoUpSLP::EdgeInfo,</text>
<text text-anchor="start" x="205" y="-496.5" font-family="Helvetica,sans-Serif" font-size="10.00"> 1 &gt;::iterator &gt;::difference_type, std::</text>
<text text-anchor="start" x="205" y="-485.5" font-family="Helvetica,sans-Serif" font-size="10.00">conditional_t&lt; std::is_same&lt; typename std</text>
<text text-anchor="start" x="205" y="-474.5" font-family="Helvetica,sans-Serif" font-size="10.00">::iterator_traits&lt; SmallVector&lt; BoUpSLP::EdgeInfo,</text>
<text text-anchor="start" x="205" y="-463.5" font-family="Helvetica,sans-Serif" font-size="10.00"> 1 &gt;::iterator &gt;::value_type, typename std::iterator</text>
<text text-anchor="start" x="205" y="-452.5" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; SmallVector&lt; BoUpSLP::EdgeInfo, 1 &gt;::iterator</text>
<text text-anchor="start" x="205" y="-441.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::value_type &gt;::value, typename std::iterator_traits</text>
<text text-anchor="start" x="205" y="-430.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; SmallVector&lt; BoUpSLP::EdgeInfo, 1 &gt;::iterator &gt;::pointer,</text>
<text text-anchor="start" x="205" y="-419.5" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; SmallVector&lt; BoUpSLP::EdgeInfo,</text>
<text text-anchor="start" x="205" y="-408.5" font-family="Helvetica,sans-Serif" font-size="10.00"> 1 &gt;::iterator &gt;::value_type * &gt;, std::conditional_t&lt; std::is</text>
<text text-anchor="start" x="205" y="-397.5" font-family="Helvetica,sans-Serif" font-size="10.00">_same&lt; typename std::iterator_traits&lt; SmallVector&lt; BoUpSLP::EdgeInfo,</text>
<text text-anchor="start" x="205" y="-386.5" font-family="Helvetica,sans-Serif" font-size="10.00"> 1 &gt;::iterator &gt;::value_type, typename std::iterator_traits&lt; SmallVector</text>
<text text-anchor="start" x="205" y="-375.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; BoUpSLP::EdgeInfo, 1 &gt;::iterator &gt;::value_type &gt;::value, typename std</text>
<text text-anchor="start" x="205" y="-364.5" font-family="Helvetica,sans-Serif" font-size="10.00">::iterator_traits&lt; SmallVector&lt; BoUpSLP::EdgeInfo, 1 &gt;::iterator &gt;::reference,</text>
<text text-anchor="middle" x="448.5" y="-353.5" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; SmallVector&lt; BoUpSLP::EdgeInfo, 1 &gt;::iterator &gt;::value_type &amp; &gt; &gt;</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="classllvm_1_1iterator__facade__base.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="710,-0.5 710,-206.5 1138,-206.5 1138,-0.5 710,-0.5"/>
<text text-anchor="start" x="718" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::iterator_facade</text>
<text text-anchor="start" x="718" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">_base&lt; DerivedT, typename</text>
<text text-anchor="start" x="718" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIterator</text>
<text text-anchor="start" x="718" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">T &gt;::iterator_category, typename</text>
<text text-anchor="start" x="718" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="start" x="718" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::value_type, typename std::iterator</text>
<text text-anchor="start" x="718" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; WrappedIteratorT &gt;::difference</text>
<text text-anchor="start" x="718" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">_type, std::conditional_t&lt; std::is_same</text>
<text text-anchor="start" x="718" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; typename std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="start" x="718" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::value_type, typename std::iterator_traits</text>
<text text-anchor="start" x="718" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; WrappedIteratorT &gt;::value_type &gt;::value, typename</text>
<text text-anchor="start" x="718" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIteratorT &gt;::pointer,</text>
<text text-anchor="start" x="718" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; WrappedIteratorT &gt;</text>
<text text-anchor="start" x="718" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">::value_type * &gt;, std::conditional_t&lt; std::is_same&lt;</text>
<text text-anchor="start" x="718" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; WrappedIteratorT &gt;::value</text>
<text text-anchor="start" x="718" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">_type, typename std::iterator_traits&lt; WrappedIteratorT &gt;</text>
<text text-anchor="start" x="718" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">::value_type &gt;::value, typename std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="middle" x="924" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::reference, typename std::iterator_traits&lt; WrappedIteratorT &gt;::value_type &amp; &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node6 -->
<g id="edge6" class="edge">
<title>Node4&#45;&gt;Node6</title>
<path fill="none" stroke="orange" stroke-dasharray="5,2" d="M117.57,-145.27C137.32,-119.28 168.33,-85.54 205,-70.5 365.18,-4.79 562.65,-20 709.93,-47.72"/>
<polygon fill="orange" stroke="orange" points="114.69,-143.27 111.56,-153.4 120.32,-147.43 114.69,-143.27"/>
<text text-anchor="start" x="242.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; DerivedT, typename</text>
<text text-anchor="start" x="242.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits</text>
<text text-anchor="start" x="242.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; WrappedIteratorT &gt;::</text>
<text text-anchor="start" x="242.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">iterator_category, typename</text>
<text text-anchor="start" x="242.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIterator</text>
<text text-anchor="start" x="242.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">T &gt;::value_type, typename std::iterator</text>
<text text-anchor="start" x="242.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; WrappedIteratorT &gt;::difference</text>
<text text-anchor="start" x="242.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">_type, std::conditional_t&lt; std::is_same</text>
<text text-anchor="start" x="242.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; typename std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="start" x="242.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::value_type, typename std::iterator_traits</text>
<text text-anchor="start" x="242.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; WrappedIteratorT &gt;::value_type &gt;::value, typename</text>
<text text-anchor="start" x="242.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIteratorT &gt;::pointer,</text>
<text text-anchor="start" x="242.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; WrappedIteratorT &gt;</text>
<text text-anchor="start" x="242.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">::value_type * &gt;, std::conditional_t&lt; std::is_same&lt;</text>
<text text-anchor="start" x="242.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; WrappedIteratorT &gt;::value</text>
<text text-anchor="start" x="242.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">_type, typename std::iterator_traits&lt; WrappedIteratorT &gt;</text>
<text text-anchor="start" x="242.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">::value_type &gt;::value, typename std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="middle" x="448.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::reference, typename std::iterator_traits&lt; WrappedIteratorT &gt;::value_type &amp; &gt; &gt;</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="classllvm_1_1iterator__adaptor__base.html" target="_top" xlink:title="CRTP base class for adapting an iterator to a different type.">
<polygon fill="none" stroke="black" points="1677,-134.5 1677,-186.5 1883,-186.5 1883,-134.5 1677,-134.5"/>
<text text-anchor="start" x="1685" y="-174.5" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::iterator_adaptor</text>
<text text-anchor="start" x="1685" y="-163.5" font-family="Helvetica,sans-Serif" font-size="10.00">_base&lt; DerivedT, WrappedIterator</text>
<text text-anchor="start" x="1685" y="-152.5" font-family="Helvetica,sans-Serif" font-size="10.00">T, IteratorCategoryT, T, DifferenceType</text>
<text text-anchor="middle" x="1780" y="-141.5" font-family="Helvetica,sans-Serif" font-size="10.00">T, PointerT, ReferenceT &gt;</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="orange" stroke-dasharray="5,2" d="M1893.33,-177.56C1942.15,-184.98 1998.63,-193.56 2044.87,-200.58"/>
<polygon fill="orange" stroke="orange" points="1893.76,-174.09 1883.35,-176.05 1892.71,-181.01 1893.76,-174.09"/>
<text text-anchor="start" x="1901" y="-222.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; ChildIteratorType,</text>
<text text-anchor="start" x="1901" y="-211.5" font-family="Helvetica,sans-Serif" font-size="10.00"> SmallVector&lt; BoUpSLP</text>
<text text-anchor="middle" x="1964" y="-200.5" font-family="Helvetica,sans-Serif" font-size="10.00">::EdgeInfo, 1 &gt;::iterator &gt;</text>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M1148.57,-103.88C1294.39,-106.43 1488.59,-114.18 1659,-135.5 1664.81,-136.23 1670.75,-137.09 1676.74,-138.04"/>
<polygon fill="midnightblue" stroke="midnightblue" points="1148.21,-100.37 1138.15,-103.71 1148.09,-107.37 1148.21,-100.37"/>
</g>
</g>
</svg>
