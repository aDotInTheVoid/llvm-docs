<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.42.4 (0)
 -->
<!-- Title: llvm::mapped_iterator&lt; ItTy, FuncTy, FuncReturnTy &gt; Pages: 1 -->
<svg width="2195pt" height="600pt"
 viewBox="0.00 0.00 2195.00 599.50" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 595.5)">
<title>llvm::mapped_iterator&lt; ItTy, FuncTy, FuncReturnTy &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="2020,-196.5 2020,-226.5 2187,-226.5 2187,-196.5 2020,-196.5"/>
<text text-anchor="start" x="2028" y="-214.5" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::mapped_iterator</text>
<text text-anchor="middle" x="2103.5" y="-203.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ItTy, FuncTy, FuncReturnTy &gt;</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="classllvm_1_1iterator__adaptor__base.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="1818,-163.5 1818,-259.5 1983,-259.5 1983,-163.5 1818,-163.5"/>
<text text-anchor="start" x="1826" y="-247.5" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::iterator_adaptor</text>
<text text-anchor="start" x="1826" y="-236.5" font-family="Helvetica,sans-Serif" font-size="10.00">_base&lt; mapped_iterator</text>
<text text-anchor="start" x="1826" y="-225.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ItTy, FuncTy &gt;, ItTy,</text>
<text text-anchor="start" x="1826" y="-214.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; ItTy</text>
<text text-anchor="start" x="1826" y="-203.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::iterator_category, std</text>
<text text-anchor="start" x="1826" y="-192.5" font-family="Helvetica,sans-Serif" font-size="10.00">::remove_reference&lt; decltype</text>
<text text-anchor="start" x="1826" y="-181.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; FuncTy &gt;()(*std</text>
<text text-anchor="middle" x="1900.5" y="-170.5" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; ItTy &gt;())) &gt;::type &gt;</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M1993.51,-211.5C2002.29,-211.5 2011.15,-211.5 2019.84,-211.5"/>
<polygon fill="midnightblue" stroke="midnightblue" points="1993.25,-208 1983.25,-211.5 1993.25,-215 1993.25,-208"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="classllvm_1_1iterator__facade__base.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="1081,-145.5 1081,-417.5 1391,-417.5 1391,-145.5 1081,-145.5"/>
<text text-anchor="start" x="1089" y="-405.5" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::iterator_facade</text>
<text text-anchor="start" x="1089" y="-394.5" font-family="Helvetica,sans-Serif" font-size="10.00">_base&lt; mapped_iterator</text>
<text text-anchor="start" x="1089" y="-383.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ItTy, FuncTy &gt;, std::</text>
<text text-anchor="start" x="1089" y="-372.5" font-family="Helvetica,sans-Serif" font-size="10.00">iterator_traits&lt; ItTy &gt;</text>
<text text-anchor="start" x="1089" y="-361.5" font-family="Helvetica,sans-Serif" font-size="10.00">::iterator_category, std</text>
<text text-anchor="start" x="1089" y="-350.5" font-family="Helvetica,sans-Serif" font-size="10.00">::remove_reference&lt; decltype</text>
<text text-anchor="start" x="1089" y="-339.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; FuncTy &gt;()(*std</text>
<text text-anchor="start" x="1089" y="-328.5" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; ItTy &gt;())) &gt;::type,</text>
<text text-anchor="start" x="1089" y="-317.5" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits</text>
<text text-anchor="start" x="1089" y="-306.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ItTy &gt;::difference_type, std::</text>
<text text-anchor="start" x="1089" y="-295.5" font-family="Helvetica,sans-Serif" font-size="10.00">conditional_t&lt; std::is_same&lt; std</text>
<text text-anchor="start" x="1089" y="-284.5" font-family="Helvetica,sans-Serif" font-size="10.00">::remove_reference&lt; decltype(std::</text>
<text text-anchor="start" x="1089" y="-273.5" font-family="Helvetica,sans-Serif" font-size="10.00">declval&lt; FuncTy &gt;()(*std::declval&lt;</text>
<text text-anchor="start" x="1089" y="-262.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ItTy &gt;())) &gt;::type, typename std::iterator</text>
<text text-anchor="start" x="1089" y="-251.5" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; ItTy &gt;::value_type &gt;::value, typename</text>
<text text-anchor="start" x="1089" y="-240.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; ItTy &gt;::pointer, std::</text>
<text text-anchor="start" x="1089" y="-229.5" font-family="Helvetica,sans-Serif" font-size="10.00">remove_reference&lt; decltype(std::declval&lt; FuncTy</text>
<text text-anchor="start" x="1089" y="-218.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;()(*std::declval&lt; ItTy &gt;())) &gt;::type * &gt;, std</text>
<text text-anchor="start" x="1089" y="-207.5" font-family="Helvetica,sans-Serif" font-size="10.00">::conditional_t&lt; std::is_same&lt; std::remove_reference</text>
<text text-anchor="start" x="1089" y="-196.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; decltype(std::declval&lt; FuncTy &gt;()(*std::declval&lt; ItTy</text>
<text text-anchor="start" x="1089" y="-185.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;())) &gt;::type, typename std::iterator_traits&lt; ItTy &gt;::</text>
<text text-anchor="start" x="1089" y="-174.5" font-family="Helvetica,sans-Serif" font-size="10.00">value_type &gt;::value, typename std::iterator_traits&lt; ItTy</text>
<text text-anchor="start" x="1089" y="-163.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::reference, std::remove_reference&lt; decltype(std::declval</text>
<text text-anchor="middle" x="1236" y="-152.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; FuncTy &gt;()(*std::declval&lt; ItTy &gt;())) &gt;::type &amp; &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M1401.31,-286.85C1514.63,-287.13 1668.03,-280.7 1800,-251.5 1805.91,-250.19 1811.92,-248.57 1817.91,-246.74"/>
<polygon fill="midnightblue" stroke="midnightblue" points="1401.18,-283.35 1391.16,-286.81 1401.15,-290.35 1401.18,-283.35"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="classllvm_1_1iterator__facade__base.html" target="_top" xlink:title="CRTP base class which implements the entire standard iterator facade in terms of a minimal subset of ...">
<polygon fill="none" stroke="black" points="0,-153.5 0,-205.5 187,-205.5 187,-153.5 0,-153.5"/>
<text text-anchor="start" x="8" y="-193.5" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::iterator_facade</text>
<text text-anchor="start" x="8" y="-182.5" font-family="Helvetica,sans-Serif" font-size="10.00">_base&lt; DerivedT, IteratorCategory</text>
<text text-anchor="start" x="8" y="-171.5" font-family="Helvetica,sans-Serif" font-size="10.00">T, T, DifferenceTypeT, PointerT,</text>
<text text-anchor="middle" x="93.5" y="-160.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ReferenceT &gt;</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="orange" stroke-dasharray="5,2" d="M124.49,-213.04C144.91,-233.29 173.83,-257.29 205,-268.5 500.11,-374.67 874.27,-341.47 1080.68,-310.04"/>
<polygon fill="orange" stroke="orange" points="126.86,-210.46 117.35,-205.78 121.86,-215.37 126.86,-210.46"/>
<text text-anchor="start" x="264" y="-583.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; mapped_iterator&lt;</text>
<text text-anchor="start" x="264" y="-572.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ItTy, FuncTy &gt;, std</text>
<text text-anchor="start" x="264" y="-561.5" font-family="Helvetica,sans-Serif" font-size="10.00">::iterator_traits&lt; ItTy</text>
<text text-anchor="start" x="264" y="-550.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::iterator_category,</text>
<text text-anchor="start" x="264" y="-539.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::remove_reference&lt;</text>
<text text-anchor="start" x="264" y="-528.5" font-family="Helvetica,sans-Serif" font-size="10.00"> decltype(std::declval&lt; FuncTy</text>
<text text-anchor="start" x="264" y="-517.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;()(*std::declval&lt; ItTy &gt;())</text>
<text text-anchor="start" x="264" y="-506.5" font-family="Helvetica,sans-Serif" font-size="10.00">) &gt;::type, typename std::iterator</text>
<text text-anchor="start" x="264" y="-495.5" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; ItTy &gt;::difference_type,</text>
<text text-anchor="start" x="264" y="-484.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::conditional_t&lt; std::is_same</text>
<text text-anchor="start" x="264" y="-473.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; std::remove_reference&lt; decltype(std</text>
<text text-anchor="start" x="264" y="-462.5" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; FuncTy &gt;()(*std::declval&lt;</text>
<text text-anchor="start" x="264" y="-451.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ItTy &gt;())) &gt;::type, typename std::iterator</text>
<text text-anchor="start" x="264" y="-440.5" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; ItTy &gt;::value_type &gt;::value, typename</text>
<text text-anchor="start" x="264" y="-429.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; ItTy &gt;::pointer, std::</text>
<text text-anchor="start" x="264" y="-418.5" font-family="Helvetica,sans-Serif" font-size="10.00">remove_reference&lt; decltype(std::declval&lt; FuncTy</text>
<text text-anchor="start" x="264" y="-407.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;()(*std::declval&lt; ItTy &gt;())) &gt;::type * &gt;, std</text>
<text text-anchor="start" x="264" y="-396.5" font-family="Helvetica,sans-Serif" font-size="10.00">::conditional_t&lt; std::is_same&lt; std::remove_reference</text>
<text text-anchor="start" x="264" y="-385.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; decltype(std::declval&lt; FuncTy &gt;()(*std::declval&lt; ItTy</text>
<text text-anchor="start" x="264" y="-374.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;())) &gt;::type, typename std::iterator_traits&lt; ItTy &gt;::</text>
<text text-anchor="start" x="264" y="-363.5" font-family="Helvetica,sans-Serif" font-size="10.00">value_type &gt;::value, typename std::iterator_traits&lt; ItTy</text>
<text text-anchor="start" x="264" y="-352.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::reference, std::remove_reference&lt; decltype(std::declval</text>
<text text-anchor="middle" x="411" y="-341.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; FuncTy &gt;()(*std::declval&lt; ItTy &gt;())) &gt;::type &amp; &gt; &gt;</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="classllvm_1_1iterator__facade__base.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="635,-0.5 635,-206.5 1063,-206.5 1063,-0.5 635,-0.5"/>
<text text-anchor="start" x="643" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::iterator_facade</text>
<text text-anchor="start" x="643" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">_base&lt; DerivedT, typename</text>
<text text-anchor="start" x="643" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIterator</text>
<text text-anchor="start" x="643" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">T &gt;::iterator_category, typename</text>
<text text-anchor="start" x="643" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="start" x="643" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::value_type, typename std::iterator</text>
<text text-anchor="start" x="643" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; WrappedIteratorT &gt;::difference</text>
<text text-anchor="start" x="643" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">_type, std::conditional_t&lt; std::is_same</text>
<text text-anchor="start" x="643" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; typename std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="start" x="643" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::value_type, typename std::iterator_traits</text>
<text text-anchor="start" x="643" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; WrappedIteratorT &gt;::value_type &gt;::value, typename</text>
<text text-anchor="start" x="643" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIteratorT &gt;::pointer,</text>
<text text-anchor="start" x="643" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; WrappedIteratorT &gt;</text>
<text text-anchor="start" x="643" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">::value_type * &gt;, std::conditional_t&lt; std::is_same&lt;</text>
<text text-anchor="start" x="643" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; WrappedIteratorT &gt;::value</text>
<text text-anchor="start" x="643" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">_type, typename std::iterator_traits&lt; WrappedIteratorT &gt;</text>
<text text-anchor="start" x="643" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">::value_type &gt;::value, typename std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="middle" x="849" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::reference, typename std::iterator_traits&lt; WrappedIteratorT &gt;::value_type &amp; &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node6 -->
<g id="edge6" class="edge">
<title>Node4&#45;&gt;Node6</title>
<path fill="none" stroke="orange" stroke-dasharray="5,2" d="M117.57,-145.27C137.32,-119.28 168.33,-85.54 205,-70.5 340.47,-14.93 505.67,-24.87 634.7,-47.83"/>
<polygon fill="orange" stroke="orange" points="114.69,-143.27 111.56,-153.4 120.32,-147.43 114.69,-143.27"/>
<text text-anchor="start" x="205" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; DerivedT, typename</text>
<text text-anchor="start" x="205" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits</text>
<text text-anchor="start" x="205" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; WrappedIteratorT &gt;::</text>
<text text-anchor="start" x="205" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">iterator_category, typename</text>
<text text-anchor="start" x="205" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIterator</text>
<text text-anchor="start" x="205" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">T &gt;::value_type, typename std::iterator</text>
<text text-anchor="start" x="205" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; WrappedIteratorT &gt;::difference</text>
<text text-anchor="start" x="205" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">_type, std::conditional_t&lt; std::is_same</text>
<text text-anchor="start" x="205" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; typename std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="start" x="205" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::value_type, typename std::iterator_traits</text>
<text text-anchor="start" x="205" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; WrappedIteratorT &gt;::value_type &gt;::value, typename</text>
<text text-anchor="start" x="205" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIteratorT &gt;::pointer,</text>
<text text-anchor="start" x="205" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; WrappedIteratorT &gt;</text>
<text text-anchor="start" x="205" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">::value_type * &gt;, std::conditional_t&lt; std::is_same&lt;</text>
<text text-anchor="start" x="205" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; WrappedIteratorT &gt;::value</text>
<text text-anchor="start" x="205" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">_type, typename std::iterator_traits&lt; WrappedIteratorT &gt;</text>
<text text-anchor="start" x="205" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">::value_type &gt;::value, typename std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="middle" x="411" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::reference, typename std::iterator_traits&lt; WrappedIteratorT &gt;::value_type &amp; &gt; &gt;</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="classllvm_1_1iterator__adaptor__base.html" target="_top" xlink:title="CRTP base class for adapting an iterator to a different type.">
<polygon fill="none" stroke="black" points="1409,-101.5 1409,-153.5 1615,-153.5 1615,-101.5 1409,-101.5"/>
<text text-anchor="start" x="1417" y="-141.5" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::iterator_adaptor</text>
<text text-anchor="start" x="1417" y="-130.5" font-family="Helvetica,sans-Serif" font-size="10.00">_base&lt; DerivedT, WrappedIterator</text>
<text text-anchor="start" x="1417" y="-119.5" font-family="Helvetica,sans-Serif" font-size="10.00">T, IteratorCategoryT, T, DifferenceType</text>
<text text-anchor="middle" x="1512" y="-108.5" font-family="Helvetica,sans-Serif" font-size="10.00">T, PointerT, ReferenceT &gt;</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="orange" stroke-dasharray="5,2" d="M1625.47,-140.78C1678.87,-148.38 1743.26,-159.46 1800,-174.5 1805.88,-176.06 1811.9,-177.83 1817.92,-179.73"/>
<polygon fill="orange" stroke="orange" points="1625.68,-137.27 1615.29,-139.35 1624.71,-144.2 1625.68,-137.27"/>
<text text-anchor="start" x="1633" y="-243.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; mapped_iterator&lt;</text>
<text text-anchor="start" x="1633" y="-232.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ItTy, FuncTy &gt;, ItTy,</text>
<text text-anchor="start" x="1633" y="-221.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits</text>
<text text-anchor="start" x="1633" y="-210.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ItTy &gt;::iterator_category,</text>
<text text-anchor="start" x="1633" y="-199.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::remove_reference&lt; decltype</text>
<text text-anchor="start" x="1633" y="-188.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; FuncTy &gt;()(*std</text>
<text text-anchor="middle" x="1716.5" y="-177.5" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; ItTy &gt;())) &gt;::type &gt;</text>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M1073.47,-111.61C1187.11,-115.74 1319.67,-120.55 1408.84,-123.79"/>
<polygon fill="midnightblue" stroke="midnightblue" points="1073.36,-108.11 1063.24,-111.24 1073.11,-115.1 1073.36,-108.11"/>
</g>
</g>
</svg>
