<map id="llvm::Value" name="llvm::Value">
<area shape="rect" id="node1" title="LLVM Value Representation." alt="" coords="5,537,100,564"/>
<area shape="rect" id="node2" href="$classllvm_1_1Argument.html" title="This class represents an incoming formal argument to a Function." alt="" coords="173,436,296,463"/>
<area shape="rect" id="node3" href="$classllvm_1_1BasicBlock.html" title="LLVM Basic Block Representation." alt="" coords="169,487,300,513"/>
<area shape="rect" id="node4" href="$classllvm_1_1InlineAsm.html" title=" " alt="" coords="173,537,297,564"/>
<area shape="rect" id="node5" href="$classllvm_1_1MetadataAsValue.html" title="Metadata wrapper in the Value hierarchy." alt="" coords="148,588,321,615"/>
<area shape="rect" id="node6" href="$classllvm_1_1User.html" title=" " alt="" coords="190,639,279,665"/>
<area shape="rect" id="node7" href="$classllvm_1_1Constant.html" title="This is an important base class in LLVM." alt="" coords="381,157,498,184"/>
<area shape="rect" id="node14" href="$classllvm_1_1DerivedUser.html" title="Extension point for the Value hierarchy." alt="" coords="369,473,509,500"/>
<area shape="rect" id="node16" href="$classllvm_1_1Instruction.html" title=" " alt="" coords="375,968,503,995"/>
<area shape="rect" id="node43" href="$classllvm_1_1Operator.html" title="This is a utility class that provides an abstraction for the common functionality between Instruction..." alt="" coords="381,1852,497,1879"/>
<area shape="rect" id="node8" href="$classllvm_1_1BlockAddress.html" title="The address of a basic block." alt="" coords="579,5,726,32"/>
<area shape="rect" id="node9" href="$classllvm_1_1ConstantAggregate.html" title="Base class for aggregate constants (with operands)." alt="" coords="561,56,745,83"/>
<area shape="rect" id="node10" href="$classllvm_1_1ConstantData.html" title="Base class for constants with no operands." alt="" coords="579,107,727,133"/>
<area shape="rect" id="node11" href="$classllvm_1_1ConstantExpr.html" title="A constant value that is initialized with an expression using other constant values." alt="" coords="579,157,726,184"/>
<area shape="rect" id="node12" href="$classllvm_1_1DSOLocalEquivalent.html" title="Wrapper for a function that represents a value that functionally represents the original function." alt="" coords="557,208,748,235"/>
<area shape="rect" id="node13" href="$classllvm_1_1GlobalValue.html" title=" " alt="" coords="584,259,721,285"/>
<area shape="rect" id="node15" href="$classllvm_1_1MemoryAccess.html" title=" " alt="" coords="573,309,732,336"/>
<area shape="rect" id="node17" href="$classllvm_1_1AtomicCmpXchgInst.html" title="An instruction that atomically checks whether a specified value is in a memory location,..." alt="" coords="557,360,748,387"/>
<area shape="rect" id="node18" href="$classllvm_1_1AtomicRMWInst.html" title="an instruction that atomically reads a memory location, combines it with another value,..." alt="" coords="571,411,734,437"/>
<area shape="rect" id="node19" href="$classllvm_1_1BinaryOperator.html" title=" " alt="" coords="573,461,732,488"/>
<area shape="rect" id="node20" href="$classllvm_1_1BranchInst.html" title="Conditional or Unconditional Branch instruction." alt="" coords="589,512,717,539"/>
<area shape="rect" id="node21" href="$classllvm_1_1CallBase.html" title="Base class for all callable instructions (InvokeInst and CallInst) Holds everything related to callin..." alt="" coords="595,563,711,589"/>
<area shape="rect" id="node22" href="$classllvm_1_1CatchReturnInst.html" title=" " alt="" coords="571,613,734,640"/>
<area shape="rect" id="node23" href="$classllvm_1_1CatchSwitchInst.html" title=" " alt="" coords="571,664,734,691"/>
<area shape="rect" id="node24" href="$classllvm_1_1CleanupReturnInst.html" title=" " alt="" coords="563,715,742,741"/>
<area shape="rect" id="node25" href="$classllvm_1_1CmpInst.html" title="This class is the base class for the comparison instructions." alt="" coords="596,765,709,792"/>
<area shape="rect" id="node26" href="$classllvm_1_1ExtractElementInst.html" title="This instruction extracts a single (scalar) element from a VectorType value." alt="" coords="561,816,744,843"/>
<area shape="rect" id="node27" href="$classllvm_1_1FenceInst.html" title="An instruction for ordering other memory operations." alt="" coords="592,867,713,893"/>
<area shape="rect" id="node28" href="$classllvm_1_1FuncletPadInst.html" title=" " alt="" coords="576,917,729,944"/>
<area shape="rect" id="node29" href="$classllvm_1_1GetElementPtrInst.html" title="an instruction for type&#45;safe pointer arithmetic to access elements of arrays and structs" alt="" coords="563,968,742,995"/>
<area shape="rect" id="node30" href="$classllvm_1_1IndirectBrInst.html" title="Indirect Branch Instruction." alt="" coords="579,1019,726,1045"/>
<area shape="rect" id="node31" href="$classllvm_1_1InsertElementInst.html" title="This instruction inserts a single (scalar) element into a VectorType value." alt="" coords="565,1069,740,1096"/>
<area shape="rect" id="node32" href="$classllvm_1_1InsertValueInst.html" title="This instruction inserts a struct field of array element value into an aggregate value." alt="" coords="575,1120,731,1147"/>
<area shape="rect" id="node33" href="$classllvm_1_1LandingPadInst.html" title="The landingpad instruction holds all of the information necessary to generate correct exception handl..." alt="" coords="574,1171,731,1197"/>
<area shape="rect" id="node34" href="$classllvm_1_1PHINode.html" title=" " alt="" coords="595,1221,710,1248"/>
<area shape="rect" id="node35" href="$classllvm_1_1ResumeInst.html" title="Resume the propagation of an exception." alt="" coords="585,1272,721,1299"/>
<area shape="rect" id="node36" href="$classllvm_1_1ReturnInst.html" title="Return a value (possibly void), from a function." alt="" coords="589,1323,716,1349"/>
<area shape="rect" id="node37" href="$classllvm_1_1SelectInst.html" title="This class represents the LLVM &#39;select&#39; instruction." alt="" coords="591,1373,714,1400"/>
<area shape="rect" id="node38" href="$classllvm_1_1ShuffleVectorInst.html" title="This instruction constructs a fixed permutation of two input vectors." alt="" coords="568,1424,737,1451"/>
<area shape="rect" id="node39" href="$classllvm_1_1StoreInst.html" title="An instruction for storing to memory." alt="" coords="594,1475,711,1501"/>
<area shape="rect" id="node40" href="$classllvm_1_1SwitchInst.html" title="Multiway switch." alt="" coords="589,1525,716,1552"/>
<area shape="rect" id="node41" href="$classllvm_1_1UnaryInstruction.html" title=" " alt="" coords="569,1576,736,1603"/>
<area shape="rect" id="node42" href="$classllvm_1_1UnreachableInst.html" title="This function has undefined behavior." alt="" coords="570,1627,735,1653"/>
<area shape="rect" id="node44" href="$classllvm_1_1ConcreteOperator.html" title=" " alt="" coords="565,1677,740,1733"/>
<area shape="rect" id="node45" href="$classllvm_1_1ConcreteOperator.html" title=" " alt="" coords="565,1757,740,1813"/>
<area shape="rect" id="node46" href="$classllvm_1_1ConcreteOperator.html" title=" " alt="" coords="565,1837,740,1893"/>
<area shape="rect" id="node47" href="$classllvm_1_1ConcreteOperator.html" title=" " alt="" coords="565,1917,740,1973"/>
<area shape="rect" id="node48" href="$classllvm_1_1ConcreteOperator.html" title=" " alt="" coords="565,1997,740,2053"/>
<area shape="rect" id="node49" href="$classllvm_1_1FPMathOperator.html" title="Utility class for floating point operations which can have information about relaxed accuracy require..." alt="" coords="570,2077,735,2104"/>
</map>
