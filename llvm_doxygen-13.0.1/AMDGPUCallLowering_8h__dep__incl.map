<map id="lib/Target/AMDGPU/AMDGPUCallLowering.h" name="lib/Target/AMDGPU/AMDGPUCallLowering.h">
<area shape="rect" id="node1" title="This file describes how to lower LLVM calls to machine code calls." alt="" coords="6329,5,6563,47"/>
<area shape="rect" id="node2" href="$AMDGPUCallLowering_8cpp.html" title="This file implements the lowering of LLVM calls to machine code calls for GlobalISel." alt="" coords="5,259,239,300"/>
<area shape="rect" id="node3" href="$AMDGPUSubtarget_8cpp.html" title="Implements the AMDGPU specific subclass of TargetSubtarget." alt="" coords="6045,266,6343,293"/>
<area shape="rect" id="node4" href="$GCNSubtarget_8h.html" title="AMD GCN specific subclass of TargetSubtarget." alt="" coords="6319,95,6573,121"/>
<area shape="rect" id="node5" href="$AMDGPUAnnotateKernelFeatures_8cpp.html" title=" " alt="" coords="11671,169,11938,211"/>
<area shape="rect" id="node6" href="$AMDGPUAsmPrinter_8cpp.html" title="The AMDGPUAsmPrinter is used to print both assembly string and also binary code." alt="" coords="351,169,589,211"/>
<area shape="rect" id="node7" href="$AMDGPUAtomicOptimizer_8cpp.html" title="This pass optimizes atomic operations by using a single lane of a wavefront to perform the atomic ope..." alt="" coords="613,169,868,211"/>
<area shape="rect" id="node8" href="$AMDGPUAttributor_8cpp.html" title=" " alt="" coords="893,177,1189,203"/>
<area shape="rect" id="node9" href="$AMDGPUHSAMetadataStreamer_8cpp.html" title="AMDGPU HSA Metadata Streamer." alt="" coords="1213,169,1511,211"/>
<area shape="rect" id="node10" href="$AMDGPUInstCombineIntrinsic_8cpp.html" title=" " alt="" coords="1535,169,1767,211"/>
<area shape="rect" id="node11" href="$AMDGPUISelLowering_8cpp.html" title="This is the parent TargetLowering class for hardware code gen targets." alt="" coords="1791,169,2023,211"/>
<area shape="rect" id="node12" href="$AMDGPULibCalls_8cpp.html" title="This file does AMD library function optimizations." alt="" coords="2047,169,2274,211"/>
<area shape="rect" id="node13" href="$AMDGPULowerKernelArguments_8cpp.html" title=" " alt="" coords="2299,169,2545,211"/>
<area shape="rect" id="node14" href="$AMDGPUMachineCFGStructurizer_8cpp.html" title=" " alt="" coords="2569,169,2832,211"/>
<area shape="rect" id="node15" href="$AMDGPUMIRFormatter_8cpp.html" title="Implementation of AMDGPU overrides of MIRFormatter." alt="" coords="2857,177,3179,203"/>
<area shape="rect" id="node16" href="$AMDGPUPostLegalizerCombiner_8cpp.html" title=" " alt="" coords="3204,169,3440,211"/>
<area shape="rect" id="node17" href="$AMDGPUPreLegalizerCombiner_8cpp.html" title=" " alt="" coords="3465,169,3694,211"/>
<area shape="rect" id="node18" href="$AMDGPUPromoteAlloca_8cpp.html" title=" " alt="" coords="3719,169,3981,211"/>
<area shape="rect" id="node19" href="$AMDGPURegBankCombiner_8cpp.html" title=" " alt="" coords="4005,169,4239,211"/>
<area shape="rect" id="node20" href="$AMDGPURegisterBankInfo_8cpp.html" title="This file implements the targeting of the RegisterBankInfo class for AMDGPU." alt="" coords="4263,169,4525,211"/>
<area shape="rect" id="node21" href="$AMDGPUReplaceLDSUseWithPointer_8cpp.html" title=" " alt="" coords="4549,169,4809,211"/>
<area shape="rect" id="node22" href="$AMDGPUResourceUsageAnalysis_8cpp.html" title="Analyzes how many registers and other resources are used by functions." alt="" coords="4833,169,5101,211"/>
<area shape="rect" id="node23" href="$AMDGPUTargetMachine_8h.html" title="The AMDGPU TargetMachine interface definition for hw codgen targets." alt="" coords="79,169,327,211"/>
<area shape="rect" id="node24" href="$GCNDPPCombine_8cpp.html" title=" " alt="" coords="5125,177,5415,203"/>
<area shape="rect" id="node25" href="$GCNHazardRecognizer_8cpp.html" title=" " alt="" coords="5439,169,5663,211"/>
<area shape="rect" id="node26" href="$GCNNSAReassign_8cpp.html" title="Try to reassign registers on GFX10+ from non&#45;sequential to sequential in NSA image instructions." alt="" coords="5688,177,5980,203"/>
<area shape="rect" id="node27" href="$GCNPreRAOptimizations_8cpp.html" title="This pass combines split register tuple initialization into a single psuedo:" alt="" coords="6004,169,6203,211"/>
<area shape="rect" id="node28" href="$GCNRegPressure_8h.html" title="This file defines the GCNRegPressure class, which tracks registry pressure by bookkeeping number of S..." alt="" coords="6227,169,6430,211"/>
<area shape="rect" id="node29" href="$SIAnnotateControlFlow_8cpp.html" title="Annotates the control flow with hardware specific intrinsics." alt="" coords="6455,169,6675,211"/>
<area shape="rect" id="node30" href="$SIFixSGPRCopies_8cpp.html" title="Copies from VGPR to SGPR registers are illegal and the register coalescer will sometimes generate the..." alt="" coords="6699,177,6985,203"/>
<area shape="rect" id="node31" href="$SIFixVGPRCopies_8cpp.html" title="Add implicit use of exec to vector register copies." alt="" coords="7009,177,7296,203"/>
<area shape="rect" id="node32" href="$SIFoldOperands_8cpp.html" title=" " alt="" coords="7320,169,7508,211"/>
<area shape="rect" id="node33" href="$SIFrameLowering_8cpp.html" title=" " alt="" coords="7533,169,7735,211"/>
<area shape="rect" id="node34" href="$SIInsertHardClauses_8cpp.html" title="Insert s_clause instructions to form hard clauses." alt="" coords="7760,169,7959,211"/>
<area shape="rect" id="node35" href="$SIInsertWaitcnts_8cpp.html" title="Insert wait instructions for memory reads and writes." alt="" coords="7983,169,8181,211"/>
<area shape="rect" id="node36" href="$SIInstrInfo_8cpp.html" title="SI Implementation of TargetInstrInfo." alt="" coords="8205,169,8396,211"/>
<area shape="rect" id="node37" href="$SILateBranchLowering_8cpp.html" title="This pass mainly lowers early terminate pseudo instructions." alt="" coords="8421,169,8610,211"/>
<area shape="rect" id="node38" href="$SILoadStoreOptimizer_8cpp.html" title=" " alt="" coords="8634,169,8826,211"/>
<area shape="rect" id="node39" href="$SILowerControlFlow_8cpp.html" title="This pass lowers the pseudo control flow instructions to real machine instructions." alt="" coords="8850,169,9050,211"/>
<area shape="rect" id="node40" href="$SILowerI1Copies_8cpp.html" title=" " alt="" coords="9074,169,9274,211"/>
<area shape="rect" id="node41" href="$SILowerSGPRSpills_8cpp.html" title=" " alt="" coords="9298,169,9498,211"/>
<area shape="rect" id="node42" href="$SIMemoryLegalizer_8cpp.html" title="Memory legalizer &#45; implements memory model." alt="" coords="9523,169,9737,211"/>
<area shape="rect" id="node43" href="$SIModeRegister_8cpp.html" title="This pass inserts changes to the Mode register settings as required." alt="" coords="9762,169,9959,211"/>
<area shape="rect" id="node44" href="$SIOptimizeExecMasking_8cpp.html" title=" " alt="" coords="9984,169,10204,211"/>
<area shape="rect" id="node45" href="$SIOptimizeExecMaskingPreRA_8cpp.html" title="This pass performs exec mask handling peephole optimizations which needs to be done before register a..." alt="" coords="10228,169,10448,211"/>
<area shape="rect" id="node46" href="$SIOptimizeVGPRLiveRange_8cpp.html" title="This pass tries to remove unnecessary VGPR live ranges in divergent if&#45;else structures and waterfall ..." alt="" coords="10472,169,10692,211"/>
<area shape="rect" id="node47" href="$SIPeepholeSDWA_8cpp.html" title=" " alt="" coords="10717,169,10938,211"/>
<area shape="rect" id="node48" href="$SIPostRABundler_8cpp.html" title="This pass creates bundles of memory instructions to protect adjacent loads and stores from beeing res..." alt="" coords="10962,169,11151,211"/>
<area shape="rect" id="node49" href="$SIPreAllocateWWMRegs_8cpp.html" title="Pass to pre&#45;allocated WWM registers." alt="" coords="11175,169,11410,211"/>
<area shape="rect" id="node50" href="$SIPreEmitPeephole_8cpp.html" title="This pass performs the peephole optimizations before code emission." alt="" coords="11435,169,11647,211"/>
</map>
