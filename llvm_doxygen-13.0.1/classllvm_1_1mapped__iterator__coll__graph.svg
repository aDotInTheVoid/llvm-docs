<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.42.4 (0)
 -->
<!-- Title: llvm::mapped_iterator&lt; ItTy, FuncTy, FuncReturnTy &gt; Pages: 1 -->
<svg width="2195pt" height="648pt"
 viewBox="0.00 0.00 2195.00 648.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 644)">
<title>llvm::mapped_iterator&lt; ItTy, FuncTy, FuncReturnTy &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="2020,-127 2020,-157 2187,-157 2187,-127 2020,-127"/>
<text text-anchor="start" x="2028" y="-145" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::mapped_iterator</text>
<text text-anchor="middle" x="2103.5" y="-134" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ItTy, FuncTy, FuncReturnTy &gt;</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="classllvm_1_1iterator__adaptor__base.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="1818,-94 1818,-190 1983,-190 1983,-94 1818,-94"/>
<text text-anchor="start" x="1826" y="-178" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::iterator_adaptor</text>
<text text-anchor="start" x="1826" y="-167" font-family="Helvetica,sans-Serif" font-size="10.00">_base&lt; mapped_iterator</text>
<text text-anchor="start" x="1826" y="-156" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ItTy, FuncTy &gt;, ItTy,</text>
<text text-anchor="start" x="1826" y="-145" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; ItTy</text>
<text text-anchor="start" x="1826" y="-134" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::iterator_category, std</text>
<text text-anchor="start" x="1826" y="-123" font-family="Helvetica,sans-Serif" font-size="10.00">::remove_reference&lt; decltype</text>
<text text-anchor="start" x="1826" y="-112" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; FuncTy &gt;()(*std</text>
<text text-anchor="middle" x="1900.5" y="-101" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; ItTy &gt;())) &gt;::type &gt;</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M1993.51,-142C2002.29,-142 2011.15,-142 2019.84,-142"/>
<polygon fill="midnightblue" stroke="midnightblue" points="1993.25,-138.5 1983.25,-142 1993.25,-145.5 1993.25,-138.5"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="classllvm_1_1iterator__facade__base.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="1081,-175 1081,-447 1391,-447 1391,-175 1081,-175"/>
<text text-anchor="start" x="1089" y="-435" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::iterator_facade</text>
<text text-anchor="start" x="1089" y="-424" font-family="Helvetica,sans-Serif" font-size="10.00">_base&lt; mapped_iterator</text>
<text text-anchor="start" x="1089" y="-413" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ItTy, FuncTy &gt;, std::</text>
<text text-anchor="start" x="1089" y="-402" font-family="Helvetica,sans-Serif" font-size="10.00">iterator_traits&lt; ItTy &gt;</text>
<text text-anchor="start" x="1089" y="-391" font-family="Helvetica,sans-Serif" font-size="10.00">::iterator_category, std</text>
<text text-anchor="start" x="1089" y="-380" font-family="Helvetica,sans-Serif" font-size="10.00">::remove_reference&lt; decltype</text>
<text text-anchor="start" x="1089" y="-369" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; FuncTy &gt;()(*std</text>
<text text-anchor="start" x="1089" y="-358" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; ItTy &gt;())) &gt;::type,</text>
<text text-anchor="start" x="1089" y="-347" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits</text>
<text text-anchor="start" x="1089" y="-336" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ItTy &gt;::difference_type, std::</text>
<text text-anchor="start" x="1089" y="-325" font-family="Helvetica,sans-Serif" font-size="10.00">conditional_t&lt; std::is_same&lt; std</text>
<text text-anchor="start" x="1089" y="-314" font-family="Helvetica,sans-Serif" font-size="10.00">::remove_reference&lt; decltype(std::</text>
<text text-anchor="start" x="1089" y="-303" font-family="Helvetica,sans-Serif" font-size="10.00">declval&lt; FuncTy &gt;()(*std::declval&lt;</text>
<text text-anchor="start" x="1089" y="-292" font-family="Helvetica,sans-Serif" font-size="10.00"> ItTy &gt;())) &gt;::type, typename std::iterator</text>
<text text-anchor="start" x="1089" y="-281" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; ItTy &gt;::value_type &gt;::value, typename</text>
<text text-anchor="start" x="1089" y="-270" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; ItTy &gt;::pointer, std::</text>
<text text-anchor="start" x="1089" y="-259" font-family="Helvetica,sans-Serif" font-size="10.00">remove_reference&lt; decltype(std::declval&lt; FuncTy</text>
<text text-anchor="start" x="1089" y="-248" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;()(*std::declval&lt; ItTy &gt;())) &gt;::type * &gt;, std</text>
<text text-anchor="start" x="1089" y="-237" font-family="Helvetica,sans-Serif" font-size="10.00">::conditional_t&lt; std::is_same&lt; std::remove_reference</text>
<text text-anchor="start" x="1089" y="-226" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; decltype(std::declval&lt; FuncTy &gt;()(*std::declval&lt; ItTy</text>
<text text-anchor="start" x="1089" y="-215" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;())) &gt;::type, typename std::iterator_traits&lt; ItTy &gt;::</text>
<text text-anchor="start" x="1089" y="-204" font-family="Helvetica,sans-Serif" font-size="10.00">value_type &gt;::value, typename std::iterator_traits&lt; ItTy</text>
<text text-anchor="start" x="1089" y="-193" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::reference, std::remove_reference&lt; decltype(std::declval</text>
<text text-anchor="middle" x="1236" y="-182" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; FuncTy &gt;()(*std::declval&lt; ItTy &gt;())) &gt;::type &amp; &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M1401.3,-307.88C1517.15,-300.38 1673.56,-279.34 1800,-223 1818.11,-214.93 1835.65,-202.68 1850.83,-190.14"/>
<polygon fill="midnightblue" stroke="midnightblue" points="1401.04,-304.39 1391.27,-308.5 1401.47,-311.37 1401.04,-304.39"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="classllvm_1_1iterator__facade__base.html" target="_top" xlink:title="CRTP base class which implements the entire standard iterator facade in terms of a minimal subset of ...">
<polygon fill="none" stroke="black" points="0,-208 0,-260 187,-260 187,-208 0,-208"/>
<text text-anchor="start" x="8" y="-248" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::iterator_facade</text>
<text text-anchor="start" x="8" y="-237" font-family="Helvetica,sans-Serif" font-size="10.00">_base&lt; DerivedT, IteratorCategory</text>
<text text-anchor="start" x="8" y="-226" font-family="Helvetica,sans-Serif" font-size="10.00">T, T, DifferenceTypeT, PointerT,</text>
<text text-anchor="middle" x="93.5" y="-215" font-family="Helvetica,sans-Serif" font-size="10.00"> ReferenceT &gt;</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="orange" stroke-dasharray="5,2" d="M124.44,-267.67C144.85,-287.98 173.76,-311.98 205,-323 500.77,-427.3 874.69,-383.07 1080.87,-344.86"/>
<polygon fill="orange" stroke="orange" points="126.81,-265.09 117.32,-260.39 121.81,-269.99 126.81,-265.09"/>
<text text-anchor="start" x="264" y="-632" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; mapped_iterator&lt;</text>
<text text-anchor="start" x="264" y="-621" font-family="Helvetica,sans-Serif" font-size="10.00"> ItTy, FuncTy &gt;, std</text>
<text text-anchor="start" x="264" y="-610" font-family="Helvetica,sans-Serif" font-size="10.00">::iterator_traits&lt; ItTy</text>
<text text-anchor="start" x="264" y="-599" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::iterator_category,</text>
<text text-anchor="start" x="264" y="-588" font-family="Helvetica,sans-Serif" font-size="10.00"> std::remove_reference&lt;</text>
<text text-anchor="start" x="264" y="-577" font-family="Helvetica,sans-Serif" font-size="10.00"> decltype(std::declval&lt; FuncTy</text>
<text text-anchor="start" x="264" y="-566" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;()(*std::declval&lt; ItTy &gt;())</text>
<text text-anchor="start" x="264" y="-555" font-family="Helvetica,sans-Serif" font-size="10.00">) &gt;::type, typename std::iterator</text>
<text text-anchor="start" x="264" y="-544" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; ItTy &gt;::difference_type,</text>
<text text-anchor="start" x="264" y="-533" font-family="Helvetica,sans-Serif" font-size="10.00"> std::conditional_t&lt; std::is_same</text>
<text text-anchor="start" x="264" y="-522" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; std::remove_reference&lt; decltype(std</text>
<text text-anchor="start" x="264" y="-511" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; FuncTy &gt;()(*std::declval&lt;</text>
<text text-anchor="start" x="264" y="-500" font-family="Helvetica,sans-Serif" font-size="10.00"> ItTy &gt;())) &gt;::type, typename std::iterator</text>
<text text-anchor="start" x="264" y="-489" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; ItTy &gt;::value_type &gt;::value, typename</text>
<text text-anchor="start" x="264" y="-478" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; ItTy &gt;::pointer, std::</text>
<text text-anchor="start" x="264" y="-467" font-family="Helvetica,sans-Serif" font-size="10.00">remove_reference&lt; decltype(std::declval&lt; FuncTy</text>
<text text-anchor="start" x="264" y="-456" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;()(*std::declval&lt; ItTy &gt;())) &gt;::type * &gt;, std</text>
<text text-anchor="start" x="264" y="-445" font-family="Helvetica,sans-Serif" font-size="10.00">::conditional_t&lt; std::is_same&lt; std::remove_reference</text>
<text text-anchor="start" x="264" y="-434" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; decltype(std::declval&lt; FuncTy &gt;()(*std::declval&lt; ItTy</text>
<text text-anchor="start" x="264" y="-423" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;())) &gt;::type, typename std::iterator_traits&lt; ItTy &gt;::</text>
<text text-anchor="start" x="264" y="-412" font-family="Helvetica,sans-Serif" font-size="10.00">value_type &gt;::value, typename std::iterator_traits&lt; ItTy</text>
<text text-anchor="start" x="264" y="-401" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::reference, std::remove_reference&lt; decltype(std::declval</text>
<text text-anchor="middle" x="411" y="-390" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; FuncTy &gt;()(*std::declval&lt; ItTy &gt;())) &gt;::type &amp; &gt; &gt;</text>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="classllvm_1_1iterator__facade__base.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="635,-39 635,-245 1063,-245 1063,-39 635,-39"/>
<text text-anchor="start" x="643" y="-233" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::iterator_facade</text>
<text text-anchor="start" x="643" y="-222" font-family="Helvetica,sans-Serif" font-size="10.00">_base&lt; DerivedT, typename</text>
<text text-anchor="start" x="643" y="-211" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIterator</text>
<text text-anchor="start" x="643" y="-200" font-family="Helvetica,sans-Serif" font-size="10.00">T &gt;::iterator_category, typename</text>
<text text-anchor="start" x="643" y="-189" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="start" x="643" y="-178" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::value_type, typename std::iterator</text>
<text text-anchor="start" x="643" y="-167" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; WrappedIteratorT &gt;::difference</text>
<text text-anchor="start" x="643" y="-156" font-family="Helvetica,sans-Serif" font-size="10.00">_type, std::conditional_t&lt; std::is_same</text>
<text text-anchor="start" x="643" y="-145" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; typename std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="start" x="643" y="-134" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::value_type, typename std::iterator_traits</text>
<text text-anchor="start" x="643" y="-123" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; WrappedIteratorT &gt;::value_type &gt;::value, typename</text>
<text text-anchor="start" x="643" y="-112" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIteratorT &gt;::pointer,</text>
<text text-anchor="start" x="643" y="-101" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; WrappedIteratorT &gt;</text>
<text text-anchor="start" x="643" y="-90" font-family="Helvetica,sans-Serif" font-size="10.00">::value_type * &gt;, std::conditional_t&lt; std::is_same&lt;</text>
<text text-anchor="start" x="643" y="-79" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; WrappedIteratorT &gt;::value</text>
<text text-anchor="start" x="643" y="-68" font-family="Helvetica,sans-Serif" font-size="10.00">_type, typename std::iterator_traits&lt; WrappedIteratorT &gt;</text>
<text text-anchor="start" x="643" y="-57" font-family="Helvetica,sans-Serif" font-size="10.00">::value_type &gt;::value, typename std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="middle" x="849" y="-46" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::reference, typename std::iterator_traits&lt; WrappedIteratorT &gt;::value_type &amp; &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node7 -->
<g id="edge7" class="edge">
<title>Node4&#45;&gt;Node7</title>
<path fill="none" stroke="orange" stroke-dasharray="5,2" d="M117.57,-199.77C137.32,-173.78 168.33,-140.04 205,-125 340.47,-69.43 505.86,-75.24 634.98,-94.14"/>
<polygon fill="orange" stroke="orange" points="114.69,-197.77 111.56,-207.9 120.32,-201.93 114.69,-197.77"/>
<text text-anchor="start" x="205" y="-315" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; DerivedT, typename</text>
<text text-anchor="start" x="205" y="-304" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits</text>
<text text-anchor="start" x="205" y="-293" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; WrappedIteratorT &gt;::</text>
<text text-anchor="start" x="205" y="-282" font-family="Helvetica,sans-Serif" font-size="10.00">iterator_category, typename</text>
<text text-anchor="start" x="205" y="-271" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIterator</text>
<text text-anchor="start" x="205" y="-260" font-family="Helvetica,sans-Serif" font-size="10.00">T &gt;::value_type, typename std::iterator</text>
<text text-anchor="start" x="205" y="-249" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; WrappedIteratorT &gt;::difference</text>
<text text-anchor="start" x="205" y="-238" font-family="Helvetica,sans-Serif" font-size="10.00">_type, std::conditional_t&lt; std::is_same</text>
<text text-anchor="start" x="205" y="-227" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; typename std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="start" x="205" y="-216" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::value_type, typename std::iterator_traits</text>
<text text-anchor="start" x="205" y="-205" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; WrappedIteratorT &gt;::value_type &gt;::value, typename</text>
<text text-anchor="start" x="205" y="-194" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIteratorT &gt;::pointer,</text>
<text text-anchor="start" x="205" y="-183" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; WrappedIteratorT &gt;</text>
<text text-anchor="start" x="205" y="-172" font-family="Helvetica,sans-Serif" font-size="10.00">::value_type * &gt;, std::conditional_t&lt; std::is_same&lt;</text>
<text text-anchor="start" x="205" y="-161" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; WrappedIteratorT &gt;::value</text>
<text text-anchor="start" x="205" y="-150" font-family="Helvetica,sans-Serif" font-size="10.00">_type, typename std::iterator_traits&lt; WrappedIteratorT &gt;</text>
<text text-anchor="start" x="205" y="-139" font-family="Helvetica,sans-Serif" font-size="10.00">::value_type &gt;::value, typename std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="middle" x="411" y="-128" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::reference, typename std::iterator_traits&lt; WrappedIteratorT &gt;::value_type &amp; &gt; &gt;</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="classItTy.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="1495,-77.5 1495,-96.5 1529,-96.5 1529,-77.5 1495,-77.5"/>
<text text-anchor="middle" x="1512" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">ItTy</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#9a32cd" stroke-dasharray="5,2" d="M1539.25,-90.56C1589.76,-97.43 1703.99,-113.07 1800,-127 1805.79,-127.84 1811.77,-128.72 1817.79,-129.61"/>
<polygon fill="#9a32cd" stroke="#9a32cd" points="1539.57,-87.07 1529.19,-89.19 1538.63,-94.01 1539.57,-87.07"/>
<text text-anchor="middle" x="1716.5" y="-130" font-family="Helvetica,sans-Serif" font-size="10.00"> I</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="classllvm_1_1iterator__adaptor__base.html" target="_top" xlink:title="CRTP base class for adapting an iterator to a different type.">
<polygon fill="none" stroke="black" points="1409,-116 1409,-168 1615,-168 1615,-116 1409,-116"/>
<text text-anchor="start" x="1417" y="-156" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::iterator_adaptor</text>
<text text-anchor="start" x="1417" y="-145" font-family="Helvetica,sans-Serif" font-size="10.00">_base&lt; DerivedT, WrappedIterator</text>
<text text-anchor="start" x="1417" y="-134" font-family="Helvetica,sans-Serif" font-size="10.00">T, IteratorCategoryT, T, DifferenceType</text>
<text text-anchor="middle" x="1512" y="-123" font-family="Helvetica,sans-Serif" font-size="10.00">T, PointerT, ReferenceT &gt;</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node2 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node2</title>
<path fill="none" stroke="orange" stroke-dasharray="5,2" d="M1625.22,-142C1686.88,-142 1761.98,-142 1817.99,-142"/>
<polygon fill="orange" stroke="orange" points="1625.05,-138.5 1615.05,-142 1625.05,-145.5 1625.05,-138.5"/>
<text text-anchor="start" x="1633" y="-211" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; mapped_iterator&lt;</text>
<text text-anchor="start" x="1633" y="-200" font-family="Helvetica,sans-Serif" font-size="10.00"> ItTy, FuncTy &gt;, ItTy,</text>
<text text-anchor="start" x="1633" y="-189" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits</text>
<text text-anchor="start" x="1633" y="-178" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ItTy &gt;::iterator_category,</text>
<text text-anchor="start" x="1633" y="-167" font-family="Helvetica,sans-Serif" font-size="10.00"> std::remove_reference&lt; decltype</text>
<text text-anchor="start" x="1633" y="-156" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; FuncTy &gt;()(*std</text>
<text text-anchor="middle" x="1716.5" y="-145" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; ItTy &gt;())) &gt;::type &gt;</text>
</g>
<!-- Node7&#45;&gt;Node6 -->
<g id="edge6" class="edge">
<title>Node7&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M1073.47,-142C1187.11,-142 1319.67,-142 1408.84,-142"/>
<polygon fill="midnightblue" stroke="midnightblue" points="1073.24,-138.5 1063.24,-142 1073.24,-145.5 1073.24,-138.5"/>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="classWrappedIteratorT.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="798,-0.5 798,-19.5 900,-19.5 900,-0.5 798,-0.5"/>
<text text-anchor="middle" x="849" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">WrappedIteratorT</text>
</a>
</g>
</g>
<!-- Node8&#45;&gt;Node6 -->
<g id="edge8" class="edge">
<title>Node8&#45;&gt;Node6</title>
<path fill="none" stroke="#9a32cd" stroke-dasharray="5,2" d="M910.19,-12.83C953.03,-15.45 1011.83,-20.32 1063,-29 1190.52,-50.63 1335.14,-89.84 1424.73,-115.91"/>
<polygon fill="#9a32cd" stroke="#9a32cd" points="910.4,-9.33 900.21,-12.24 909.99,-16.32 910.4,-9.33"/>
<text text-anchor="middle" x="1236" y="-108" font-family="Helvetica,sans-Serif" font-size="10.00"> I</text>
</g>
</g>
</svg>
