<map id="llvm::AACallEdges" name="llvm::AACallEdges">
<area shape="rect" id="node1" title="An abstract state for querying live call edges." alt="" coords="2121,167,2263,193"/>
<area shape="rect" id="node2" href="$structllvm_1_1StateWrapper.html" title=" " alt="" coords="1813,159,2072,201"/>
<area shape="rect" id="node3" href="$structllvm_1_1AbstractAttribute.html" title="Base struct for all &quot;concrete attribute&quot; deductions." alt="" coords="1415,108,1586,135"/>
<area shape="rect" id="node4" href="$structllvm_1_1IRPosition.html" title="Helper to describe and deal with positions in the LLVM&#45;IR." alt="" coords="1120,57,1244,84"/>
<area shape="rect" id="node5" title=" " alt="" coords="809,23,866,49"/>
<area shape="rect" id="node6" href="$structllvm_1_1AADepGraphNode.html" title="}" alt="" coords="1094,108,1270,135"/>
<area shape="rect" id="node7" href="$classllvm_1_1TinyPtrVector.html" title=" " alt="" coords="749,85,925,126"/>
<area shape="rect" id="node8" href="$classllvm_1_1TinyPtrVector.html" title="TinyPtrVector &#45; This class is specialized for cases where there are normally 0 or 1 element in a vect..." alt="" coords="369,85,515,126"/>
<area shape="rect" id="node9" href="$structllvm_1_1BooleanState.html" title="Simple wrapper for a single bit (boolean) state." alt="" coords="1427,167,1574,193"/>
<area shape="rect" id="node10" href="$structllvm_1_1IntegerStateBase.html" title=" " alt="" coords="1097,159,1267,201"/>
<area shape="rect" id="node11" href="$structllvm_1_1AbstractState.html" title="An interface to query the internal state of an abstract attribute." alt="" coords="369,167,515,193"/>
<area shape="rect" id="node13" href="$structllvm_1_1IntegerStateBase.html" title="Simple state with integers encoding." alt="" coords="752,201,923,257"/>
<area shape="rect" id="node12" title=" " alt="" coords="812,281,863,308"/>
<area shape="rect" id="node14" title=" " alt="" coords="405,233,479,260"/>
<area shape="rect" id="node15" href="$structllvm_1_1StateWrapper.html" title="Helper to tie a abstract state implementation to an abstract attribute." alt="" coords="1405,218,1596,259"/>
<area shape="rect" id="node16" href="$classBaseType.html" title=" " alt="" coords="1140,225,1224,252"/>
<area shape="rect" id="node17" href="$classStateTy.html" title=" " alt="" coords="1147,276,1217,303"/>
<area shape="rect" id="node18" href="$structllvm_1_1AACallGraphNode.html" title=" " alt="" coords="1855,243,2030,269"/>
<area shape="rect" id="node19" href="$structllvm_1_1Attributor.html" title="The fixpoint analysis framework that orchestrates the attribute deduction." alt="" coords="1440,297,1561,324"/>
<area shape="rect" id="node20" href="$classllvm_1_1BumpPtrAllocatorImpl.html" title="Allocate memory in an ever growing pool, as if by bump&#45;pointer." alt="" coords="1069,327,1295,383"/>
<area shape="rect" id="node21" href="$classllvm_1_1AllocatorBase.html" title=" " alt="" coords="543,315,725,386"/>
<area shape="rect" id="node22" href="$classllvm_1_1AllocatorBase.html" title="CRTP base class providing obvious overloads for the core Allocate() methods of LLVM&#45;style allocators." alt="" coords="5,359,155,401"/>
<area shape="rect" id="node24" href="$classllvm_1_1AllocatorBase.html" title=" " alt="" coords="365,389,519,430"/>
<area shape="rect" id="node23" href="$classllvm_1_1MallocAllocator.html" title=" " alt="" coords="757,391,917,417"/>
</map>
