<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.48.0 (0)
 -->
<!-- Title: llvm::BranchInst::succ_op_iterator Pages: 1 -->
<svg width="1839pt" height="380pt"
 viewBox="0.00 0.00 1839.00 380.39" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 376.39)">
<title>llvm::BranchInst::succ_op_iterator</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Iterator type that casts an operand to a basic block.">
<polygon fill="#bfbfbf" stroke="black" points="1707,-211.5 1707,-241.5 1831,-241.5 1831,-211.5 1707,-211.5"/>
<text text-anchor="start" x="1715" y="-229.5" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::BranchInst::succ</text>
<text text-anchor="middle" x="1769" y="-218.5" font-family="Helvetica,sans-Serif" font-size="10.00">_op_iterator</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="$classllvm_1_1iterator__adaptor__base.html" xlink:title=" ">
<polygon fill="none" stroke="black" points="1498,-189.5 1498,-263.5 1670,-263.5 1670,-189.5 1498,-189.5"/>
<text text-anchor="start" x="1506" y="-251.5" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::iterator_adaptor</text>
<text text-anchor="start" x="1506" y="-240.5" font-family="Helvetica,sans-Serif" font-size="10.00">_base&lt; succ_op_iterator,</text>
<text text-anchor="start" x="1506" y="-229.5" font-family="Helvetica,sans-Serif" font-size="10.00"> value_op_iterator, std</text>
<text text-anchor="start" x="1506" y="-218.5" font-family="Helvetica,sans-Serif" font-size="10.00">::random_access_iterator</text>
<text text-anchor="start" x="1506" y="-207.5" font-family="Helvetica,sans-Serif" font-size="10.00">_tag, BasicBlock *, ptrdiff</text>
<text text-anchor="middle" x="1584" y="-196.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t, BasicBlock *, BasicBlock * &gt;</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M1680.27,-226.5C1689.3,-226.5 1698.29,-226.5 1706.87,-226.5"/>
<polygon fill="midnightblue" stroke="midnightblue" points="1680.07,-223 1670.07,-226.5 1680.07,-230 1680.07,-223"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="$classllvm_1_1iterator__facade__base.html" xlink:title="CRTP base class which implements the entire standard iterator facade in terms of a minimal subset of ...">
<polygon fill="none" stroke="black" points="0,-142.5 0,-194.5 187,-194.5 187,-142.5 0,-142.5"/>
<text text-anchor="start" x="8" y="-182.5" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::iterator_facade</text>
<text text-anchor="start" x="8" y="-171.5" font-family="Helvetica,sans-Serif" font-size="10.00">_base&lt; DerivedT, IteratorCategory</text>
<text text-anchor="start" x="8" y="-160.5" font-family="Helvetica,sans-Serif" font-size="10.00">T, T, DifferenceTypeT, PointerT,</text>
<text text-anchor="middle" x="93.5" y="-149.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ReferenceT &gt;</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M122.68,-202.12C143.03,-223.63 172.55,-249.66 205,-261.5 737.35,-455.71 920.92,-353.9 1480,-261.5 1485.87,-260.53 1491.85,-259.27 1497.84,-257.8"/>
<polygon fill="midnightblue" stroke="midnightblue" points="125.22,-199.71 115.87,-194.72 120.07,-204.45 125.22,-199.71"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="$classllvm_1_1iterator__facade__base.html" xlink:title=" ">
<polygon fill="none" stroke="black" points="635,-0.5 635,-206.5 1063,-206.5 1063,-0.5 635,-0.5"/>
<text text-anchor="start" x="643" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::iterator_facade</text>
<text text-anchor="start" x="643" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">_base&lt; DerivedT, typename</text>
<text text-anchor="start" x="643" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIterator</text>
<text text-anchor="start" x="643" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">T &gt;::iterator_category, typename</text>
<text text-anchor="start" x="643" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="start" x="643" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::value_type, typename std::iterator</text>
<text text-anchor="start" x="643" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; WrappedIteratorT &gt;::difference</text>
<text text-anchor="start" x="643" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">_type, std::conditional_t&lt; std::is_same</text>
<text text-anchor="start" x="643" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; typename std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="start" x="643" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::value_type, typename std::iterator_traits</text>
<text text-anchor="start" x="643" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; WrappedIteratorT &gt;::value_type &gt;::value, typename</text>
<text text-anchor="start" x="643" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIteratorT &gt;::pointer,</text>
<text text-anchor="start" x="643" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; WrappedIteratorT &gt;</text>
<text text-anchor="start" x="643" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">::value_type * &gt;, std::conditional_t&lt; std::is_same&lt;</text>
<text text-anchor="start" x="643" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; WrappedIteratorT &gt;::value</text>
<text text-anchor="start" x="643" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">_type, typename std::iterator_traits&lt; WrappedIteratorT &gt;</text>
<text text-anchor="start" x="643" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">::value_type &gt;::value, typename std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="middle" x="849" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::reference, typename std::iterator_traits&lt; WrappedIteratorT &gt;::value_type &amp; &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node3&#45;&gt;Node5</title>
<path fill="none" stroke="orange" stroke-dasharray="5,2" d="M118.85,-134.24C138.8,-109.37 169.45,-77.7 205,-63.5 340.94,-9.21 505.94,-20.89 634.76,-45.27"/>
<polygon fill="orange" stroke="orange" points="115.9,-132.34 112.51,-142.38 121.42,-136.65 115.9,-132.34"/>
<text text-anchor="start" x="205" y="-253.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; DerivedT, typename</text>
<text text-anchor="start" x="205" y="-242.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits</text>
<text text-anchor="start" x="205" y="-231.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; WrappedIteratorT &gt;::</text>
<text text-anchor="start" x="205" y="-220.5" font-family="Helvetica,sans-Serif" font-size="10.00">iterator_category, typename</text>
<text text-anchor="start" x="205" y="-209.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIterator</text>
<text text-anchor="start" x="205" y="-198.5" font-family="Helvetica,sans-Serif" font-size="10.00">T &gt;::value_type, typename std::iterator</text>
<text text-anchor="start" x="205" y="-187.5" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; WrappedIteratorT &gt;::difference</text>
<text text-anchor="start" x="205" y="-176.5" font-family="Helvetica,sans-Serif" font-size="10.00">_type, std::conditional_t&lt; std::is_same</text>
<text text-anchor="start" x="205" y="-165.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; typename std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="start" x="205" y="-154.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::value_type, typename std::iterator_traits</text>
<text text-anchor="start" x="205" y="-143.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; WrappedIteratorT &gt;::value_type &gt;::value, typename</text>
<text text-anchor="start" x="205" y="-132.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; WrappedIteratorT &gt;::pointer,</text>
<text text-anchor="start" x="205" y="-121.5" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; WrappedIteratorT &gt;</text>
<text text-anchor="start" x="205" y="-110.5" font-family="Helvetica,sans-Serif" font-size="10.00">::value_type * &gt;, std::conditional_t&lt; std::is_same&lt;</text>
<text text-anchor="start" x="205" y="-99.5" font-family="Helvetica,sans-Serif" font-size="10.00"> typename std::iterator_traits&lt; WrappedIteratorT &gt;::value</text>
<text text-anchor="start" x="205" y="-88.5" font-family="Helvetica,sans-Serif" font-size="10.00">_type, typename std::iterator_traits&lt; WrappedIteratorT &gt;</text>
<text text-anchor="start" x="205" y="-77.5" font-family="Helvetica,sans-Serif" font-size="10.00">::value_type &gt;::value, typename std::iterator_traits&lt; WrappedIteratorT</text>
<text text-anchor="middle" x="411" y="-66.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;::reference, typename std::iterator_traits&lt; WrappedIteratorT &gt;::value_type &amp; &gt; &gt;</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="$classllvm_1_1iterator__adaptor__base.html" xlink:title="CRTP base class for adapting an iterator to a different type.">
<polygon fill="none" stroke="black" points="1100,-123.5 1100,-175.5 1306,-175.5 1306,-123.5 1100,-123.5"/>
<text text-anchor="start" x="1108" y="-163.5" font-family="Helvetica,sans-Serif" font-size="10.00">llvm::iterator_adaptor</text>
<text text-anchor="start" x="1108" y="-152.5" font-family="Helvetica,sans-Serif" font-size="10.00">_base&lt; DerivedT, WrappedIterator</text>
<text text-anchor="start" x="1108" y="-141.5" font-family="Helvetica,sans-Serif" font-size="10.00">T, IteratorCategoryT, T, DifferenceType</text>
<text text-anchor="middle" x="1203" y="-130.5" font-family="Helvetica,sans-Serif" font-size="10.00">T, PointerT, ReferenceT &gt;</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="orange" stroke-dasharray="5,2" d="M1316.03,-172.26C1374.17,-184.07 1444.06,-198.27 1497.74,-209.18"/>
<polygon fill="orange" stroke="orange" points="1316.56,-168.8 1306.06,-170.24 1315.17,-175.66 1316.56,-168.8"/>
<text text-anchor="start" x="1324" y="-251.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &lt; succ_op_iterator,</text>
<text text-anchor="start" x="1324" y="-240.5" font-family="Helvetica,sans-Serif" font-size="10.00"> value_op_iterator,</text>
<text text-anchor="start" x="1324" y="-229.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::random_access_iterator</text>
<text text-anchor="start" x="1324" y="-218.5" font-family="Helvetica,sans-Serif" font-size="10.00">_tag, BasicBlock *, ptrdiff</text>
<text text-anchor="middle" x="1402" y="-207.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t, BasicBlock *, BasicBlock * &gt;</text>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M1073.1,-132.65C1082.21,-133.85 1091.15,-135.01 1099.8,-136.14"/>
<polygon fill="midnightblue" stroke="midnightblue" points="1073.5,-129.18 1063.13,-131.35 1072.6,-136.12 1073.5,-129.18"/>
</g>
</g>
</svg>
