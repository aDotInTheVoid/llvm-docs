<map id="llvm::FoldingSetBase::Node" name="llvm::FoldingSetBase::Node">
<area shape="rect" id="node1" title="Node &#45; This class is used to maintain the singly linked bucket list in a folding set." alt="" coords="5,581,164,622"/>
<area shape="rect" id="node2" href="$classllvm_1_1AttributeImpl.html" title=" " alt="" coords="267,31,412,57"/>
<area shape="rect" id="node5" href="$classllvm_1_1AttributeListImpl.html" title=" " alt="" coords="255,81,423,108"/>
<area shape="rect" id="node6" href="$classllvm_1_1AttributeSetNode.html" title=" " alt="" coords="254,132,425,159"/>
<area shape="rect" id="node7" href="$classllvm_1_1BinOpInit.html" title="!op (X, Y) &#45; Combine two inits." alt="" coords="280,183,399,209"/>
<area shape="rect" id="node8" href="$classllvm_1_1BitsInit.html" title="&#39;{ a, b, c }&#39; &#45; Represents an initializer for a BitsRecTy value." alt="" coords="287,233,392,260"/>
<area shape="rect" id="node9" href="$classllvm_1_1CondOpInit.html" title="!cond(condition_1: value1, ..." alt="" coords="274,284,405,311"/>
<area shape="rect" id="node10" href="$classllvm_1_1DIEAbbrev.html" title="Dwarf abbreviation, describes the organization of a debug information object." alt="" coords="276,335,403,361"/>
<area shape="rect" id="node11" href="$classllvm_1_1DagInit.html" title="(v a, b) &#45; Represent a DAG tree value." alt="" coords="286,385,393,412"/>
<area shape="rect" id="node12" href="$classllvm_1_1FastFoldingSetNode.html" title="FastFoldingSetNode &#45; This is a subclass of FoldingSetNode which stores a FoldingSetNodeID value rathe..." alt="" coords="246,436,433,463"/>
<area shape="rect" id="node13" href="$classllvm_1_1FoldOpInit.html" title="!foldl (a, b, expr, start, lst) &#45; Fold over a list." alt="" coords="277,487,402,513"/>
<area shape="rect" id="node14" href="$classllvm_1_1FoldingSetNodeWrapper.html" title="FoldingSetNodeWrapper &#45; This template class is used to &quot;wrap&quot; arbitrary types in an enclosing object ..." alt="" coords="212,537,467,564"/>
<area shape="rect" id="node15" href="$classllvm_1_1ImmutableListImpl.html" title=" " alt="" coords="229,588,449,615"/>
<area shape="rect" id="node16" href="$classllvm_1_1IsAOpInit.html" title="!isa&lt;type&gt;(expr) &#45; Dynamically determine the type of an expression." alt="" coords="280,639,399,665"/>
<area shape="rect" id="node17" href="$classllvm_1_1ListInit.html" title="[AL, AH, CL] &#45; Represent a list of defs" alt="" coords="288,689,391,716"/>
<area shape="rect" id="node18" href="$classllvm_1_1RecordRecTy.html" title="&#39;[classname]&#39; &#45; Type of record values that have zero or more superclasses." alt="" coords="268,740,411,767"/>
<area shape="rect" id="node19" href="$classllvm_1_1SCEV.html" title="This class represents an analyzed expression in the program." alt="" coords="293,791,386,817"/>
<area shape="rect" id="node26" href="$classllvm_1_1SCEVPredicate.html" title="This class represents an assumption made using SCEV expressions which can be checked at run&#45;time." alt="" coords="262,841,417,868"/>
<area shape="rect" id="node30" href="$classllvm_1_1SDNode.html" title="Represents one node in the SelectionDAG." alt="" coords="284,1120,395,1147"/>
<area shape="rect" id="node45" href="$classllvm_1_1SDVTListNode.html" title=" " alt="" coords="264,1171,415,1197"/>
<area shape="rect" id="node46" href="$classllvm_1_1TernOpInit.html" title="!op (X, Y, Z) &#45; Combine two inits." alt="" coords="277,1221,402,1248"/>
<area shape="rect" id="node47" href="$classllvm_1_1UnOpInit.html" title="!op (X) &#45; Transform an init." alt="" coords="281,1272,397,1299"/>
<area shape="rect" id="node48" href="$classllvm_1_1UniqueMachineInstr.html" title="A class that wraps MachineInstrs and derives from FoldingSetNode in order to be uniqued in a CSEMap." alt="" coords="245,1323,434,1349"/>
<area shape="rect" id="node49" href="$classllvm_1_1VarDefInit.html" title="classname&lt;targs...&gt; &#45; Represent an uninstantiated anonymous class instantiation." alt="" coords="277,1373,401,1400"/>
<area shape="rect" id="node3" href="$classllvm_1_1EnumAttributeImpl.html" title=" " alt="" coords="531,5,713,32"/>
<area shape="rect" id="node4" href="$classllvm_1_1StringAttributeImpl.html" title=" " alt="" coords="531,56,713,83"/>
<area shape="rect" id="node20" href="$classllvm_1_1SCEVCastExpr.html" title="This is the base class for unary cast operator classes." alt="" coords="547,487,697,513"/>
<area shape="rect" id="node21" href="$classllvm_1_1SCEVConstant.html" title="This class represents a constant integer value." alt="" coords="547,537,697,564"/>
<area shape="rect" id="node22" href="$structllvm_1_1SCEVCouldNotCompute.html" title="An object of this class is returned by queries that could not be answered." alt="" coords="516,588,728,615"/>
<area shape="rect" id="node23" href="$classllvm_1_1SCEVNAryExpr.html" title="This node is a base class providing common functionality for n&#39;ary operators." alt="" coords="545,639,699,665"/>
<area shape="rect" id="node24" href="$classllvm_1_1SCEVUDivExpr.html" title="This class represents a binary unsigned division operation." alt="" coords="545,689,699,716"/>
<area shape="rect" id="node25" href="$classllvm_1_1SCEVUnknown.html" title="This means that we are dealing with an entirely unknown SCEV value, and only represent it as its LLVM..." alt="" coords="545,740,699,767"/>
<area shape="rect" id="node27" href="$classllvm_1_1SCEVEqualPredicate.html" title="This class represents an assumption that two SCEV expressions are equal, and this can be checked at r..." alt="" coords="527,791,717,817"/>
<area shape="rect" id="node28" href="$classllvm_1_1SCEVUnionPredicate.html" title="This class represents a composition of other SCEV predicates, and is the class that most clients will..." alt="" coords="526,841,718,868"/>
<area shape="rect" id="node29" href="$classllvm_1_1SCEVWrapPredicate.html" title="This class represents an assumption made on an AddRec expression." alt="" coords="528,892,716,919"/>
<area shape="rect" id="node31" href="$classllvm_1_1AddrSpaceCastSDNode.html" title=" " alt="" coords="517,943,727,969"/>
<area shape="rect" id="node32" href="$classllvm_1_1AssertAlignSDNode.html" title="An SDNode that records if a register contains a value that is guaranteed to be aligned accordingly." alt="" coords="529,993,715,1020"/>
<area shape="rect" id="node33" href="$classllvm_1_1BasicBlockSDNode.html" title=" " alt="" coords="531,1044,713,1071"/>
<area shape="rect" id="node34" href="$classllvm_1_1BlockAddressSDNode.html" title=" " alt="" coords="523,1095,721,1121"/>
<area shape="rect" id="node35" href="$classllvm_1_1BuildVectorSDNode.html" title="A &quot;pseudo&#45;class&quot; with methods for operating on BUILD_VECTORs." alt="" coords="529,1145,715,1172"/>
<area shape="rect" id="node36" href="$classllvm_1_1CondCodeSDNode.html" title=" " alt="" coords="533,1196,711,1223"/>
<area shape="rect" id="node37" href="$classllvm_1_1ConstantFPSDNode.html" title=" " alt="" coords="529,1247,715,1273"/>
<area shape="rect" id="node38" href="$classllvm_1_1ConstantPoolSDNode.html" title=" " alt="" coords="523,1297,721,1324"/>
<area shape="rect" id="node39" href="$classllvm_1_1ConstantSDNode.html" title=" " alt="" coords="537,1348,707,1375"/>
<area shape="rect" id="node40" href="$classllvm_1_1ExternalSymbolSDNode.html" title=" " alt="" coords="515,1399,729,1425"/>
<area shape="rect" id="node41" href="$classllvm_1_1FrameIndexSDNode.html" title=" " alt="" coords="528,1449,716,1476"/>
<area shape="rect" id="node42" href="$classllvm_1_1GlobalAddressSDNode.html" title=" " alt="" coords="519,1500,725,1527"/>
<area shape="rect" id="node43" href="$classllvm_1_1HandleSDNode.html" title="This class is used to form a handle around another node that is persistent and is updated across invo..." alt="" coords="543,1551,701,1577"/>
<area shape="rect" id="node44" href="$classllvm_1_1JumpTableSDNode.html" title=" " alt="" coords="533,1601,711,1628"/>
</map>
